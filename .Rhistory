~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
phq.sum_score_numeric_table
# reshape the table
phq.sum_score_numeric_summary_table_reshaped <- phq.sum_score_numeric_table %>%
gather(key, value, -phq.change_binary) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
phq.sum_score_numeric_summary_table_reshaped
kable(phq.sum_score_numeric_summary_table_reshaped)
phq.numeric_table <- dat %>%
group_by(phq.change_binary) %>%
summarise_at(
vars(
"Base - prepan" = phq.diff_score_base_prepan,
"Base - retro" = phq.diff_score_base_retro,
"Prepan - retro" = phq.diff_score_retro_prepan
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
phq.numeric_table
# reshape the table
phq.numeric_summary_table_reshaped <- phq.numeric_table %>%
gather(key, value, -phq.change_binary) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
phq.numeric_summary_table_reshaped
kable(phq.numeric_summary_table_reshaped)
dat.long.phq.diff <- dat %>%
gather(
key = "Time_point_raw",
value = "phq.diff_score",
all_of(phq.diff_score_cols)) %>%
select(
ID,
Sample,
Gender,
Ethnicity,
Disorder,
Time_point_raw,
phq.diff_score
) %>%
mutate(Time_point = str_replace(Time_point_raw, "phq.diff_score_", "")) %>%
select(-Time_point_raw)
head(dat.long.phq.diff)
dat.long.phq.diff %>%
ggplot(mapping = aes(y = phq.diff_score)) +
geom_bar() +
theme_minimal() +
facet_wrap(facets = vars(Time_point))
dat.long.phq.diff %>%
filter(Time_point != "retro_prepan") %>%
ggplot(mapping = aes(
x = phq.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference phq7 score",
y = "Percentage of participants",
fill = "Comparison:\nBaseline vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Prepandemic", "Retrospective"))
dat.long.phq.diff %>%
filter(Time_point == "retro_prepan") %>%
ggplot(mapping = aes(
x = phq.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference phq7 score",
y = "Percentage of participants",
fill = "Comparison:\nPrepandemic vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Retrospective"))
dat.long.phq.diff %>%
filter(Time_point != "retro_prepan") %>%
ggplot(mapping = aes(
x = phq.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference PHQ9 score",
y = "Percentage of participants",
fill = "Comparison:\nBaseline vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Prepandemic", "Retrospective")) +
facet_wrap("Disorder")
dat <- dat %>%
mutate(ocir.change_binary_numeric =
case_when(
ocir.felt_pandemic_feelings_numeric == 1 ~ 1,
ocir.felt_pandemic_feelings_numeric == 2 ~ 1,
ocir.felt_pandemic_feelings_numeric == 3 ~ 0,
ocir.felt_pandemic_feelings_numeric == 4 ~ 2,
ocir.felt_pandemic_feelings_numeric == 5 ~ 2
)
)
dat <- dat %>%
mutate(ocir.change_binary =
recode_factor(
ocir.change_binary_numeric,
`1` = "Worsening",
`2` = "No change",
`3` = "Improvement"
)
)
dat %>%
freq(ocir.change_binary)
ocir.sum_score_numeric_table <- dat %>%
group_by(ocir.change_binary) %>%
summarise_at(
vars(
"Prepan" = ocir.sum_score_prepan,
"Base" = ocir.sum_score_base,
"Retro" = ocir.sum_score_retro
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
ocir.sum_score_numeric_table
# reshape the table
ocir.sum_score_numeric_summary_table_reshaped <- ocir.sum_score_numeric_table %>%
filter(ocir.change_binary == "Worsening") %>%
select(-ocir.change_binary) %>%
gather(key, value) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
ocir.sum_score_numeric_summary_table_reshaped
kable(ocir.sum_score_numeric_summary_table_reshaped)
ocir.numeric_table <- dat %>%
#  group_by(dem.sex) %>%
summarise_at(
vars(
"Base - prepan" = ocir.diff_score_base_prepan,
"Base - retro" = ocir.diff_score_base_retro,
"Prepan - retro" = ocir.diff_score_retro_prepan
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
ocir.numeric_table
# reshape the table
ocir.numeric_summary_table_reshaped <- ocir.numeric_table %>%
gather(key, value) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
ocir.numeric_summary_table_reshaped
kable(ocir.numeric_summary_table_reshaped)
dat.long.ocir.diff <- dat %>%
gather(
key = "Time_point_raw",
value = "ocir.diff_score",
all_of(ocir.diff_score_cols)) %>%
select(
ID,
Sample,
Gender,
Ethnicity,
Disorder,
Time_point_raw,
ocir.diff_score
) %>%
mutate(Time_point = str_replace(Time_point_raw, "ocir.diff_score_", "")) %>%
select(-Time_point_raw)
head(dat.long.ocir.diff)
dat.long.ocir.diff %>%
ggplot(mapping = aes(y = ocir.diff_score)) +
geom_bar() +
theme_minimal() +
facet_wrap(facets = vars(Time_point))
dat.long.ocir.diff %>%
filter(Time_point != "retro_prepan") %>%
ggplot(mapping = aes(
x = ocir.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference ocir7 score",
y = "Percentage of participants",
fill = "Comparison:\nBaseline vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Prepandemic", "Retrospective"))
dat.long.ocir.diff %>%
filter(Time_point == "retro_prepan") %>%
ggplot(mapping = aes(
x = ocir.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference ocir7 score",
y = "Percentage of participants",
fill = "Comparison:\nPrepandemic vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Retrospective"))
gad.diff_score_base_prepan_plot <- dat %>%
ggplot(mapping = aes(y = gad.diff_score_base_prepan)) +
geom_bar() +
theme_minimal()
gad.diff_score_retro_prepan_plot <- dat %>%
ggplot(mapping = aes(y = gad.diff_score_retro_prepan)) +
geom_bar() +
theme_minimal()
gad.diff_score_base_retro_plot <- dat %>%
ggplot(mapping = aes(y = gad.diff_score_base_retro)) +
geom_bar() +
theme_minimal()
gad.diff_score_base_prepan_plot /
gad.diff_score_retro_prepan_plot /
gad.diff_score_base_retro_plot +
plot_layout(guides = "collect", heights = c(1,1,1)) +
plot_annotation(tag_levels = "A")
#ADD
model0 <- lm(
formula = phq.diff_score_base_prepan ~ Disorder,
data = dat)
summary(model0)
model0 <- lm(
formula = gad.diff_score_base_prepan ~ Disorder,
data = dat)
summary(model0)
tidy(model0)
model1 <- lm(
formula = phq.diff_score_base_prepan ~ Disorder + Gender + Age + Ethnicity + time_diff_sign_up_coping,
data = dat)
summary(model1)
model1 <- lm(
formula = gad.diff_score_base_prepan ~ Disorder + Gender + Age + Ethnicity + time_diff_sign_up_coping,
data = dat)
summary(model1)
pcl.numeric_table <- dat %>%
#    group_by(Sample) %>%
summarise_at(
vars(
"Base - prepan" = pcl.diff_score_base_prepan
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
pcl.numeric_table
# reshape the table
pcl.numeric_summary_table_reshaped <- pcl.numeric_table %>%
gather(key, value) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
pcl.numeric_summary_table_reshaped
kable(pcl.numeric_summary_table_reshaped)
pcl.sum_score_numeric_table <- dat %>%
#    group_by(Sample) %>%
summarise_at(
vars(
"Prepan" = pcl.sum_score_prepan,
"Base" = pcl.sum_score_base
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
pcl.numeric_table
# reshape the table
pcl.sum_score_numeric_summary_table_reshaped <- pcl.sum_score_numeric_table %>%
gather(key, value) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
pcl.sum_score_numeric_summary_table_reshaped
kable(pcl.sum_score_numeric_summary_table_reshaped)
pcl.retro.items <- c(
"pcl.stressful_experience_upset_reminded_retro_numeric",
"pcl.stressful_experience_repeated_images_retro_numeric",
"pcl.stressful_situation_avoiding_activities_retro_numeric",
"pcl.cut_people_feeling_distant_retro_numeric",
"pcl.difficulty_concentrating_retro_numeric",
"pcl.feeling_irritable_or_having_angry_outbursts_retro_numeric"
)
pcl.percentages.summary <- dat %>%
select(
all_of(pcl.retro.items)
) %>%
gather(
key = "PCL Item",
value = "Binary_score",
all_of(pcl.retro.items)
) %>%
mutate(Binary_score = fct_explicit_na(as.factor(Binary_score), na_level = "Missing")) %>%
group_by(`PCL Item`) %>%
count(`PCL Item`, Binary_score) %>%
mutate(prop = round(n/sum(n), 3)*100) %>%
mutate(n_prop = paste0(n," (",prop, "%)"))
pcl.percentages.summary
dat.long.ocir.diff %>%
filter(Time_point != "retro_prepan") %>%
ggplot(mapping = aes(
x = ocir.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference OCI-R score",
y = "Percentage of participants",
fill = "Comparison:\nBaseline vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Prepandemic", "Retrospective")) +
facet_wrap("Disorder")
colnames(dat)
model0b <- lm(
formula = phq.diff_score_base_prepan ~
anxiety_disorders +
depressive_disorders +
eating_disorders +
obsessive_compulsive_disorders +
psychotic_disorders +
mhd.mania_hypomania_bipolar_or_manicdepression +
mhd.posttraumatic_stress_disorder_ptsd +
mhd.autism_aspergers_or_autistic_spectrum_disorder +
mhd.attention_deficit_hyperactivity_disorder +
mhd.personality_disorder,
data = dat)
summary(model0b)
