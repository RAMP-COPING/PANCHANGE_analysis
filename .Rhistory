drop_na(Gender)
dim(dat.no.sex.no.gender)
dim(dat.no.sex)[1]-dim(dat.no.sex.no.gender)[1]
dim(dat.no.sex.no.gender)
dat.no.sex.no.gender.no.age <- dat.no.sex.no.gender %>%
drop_na(age_category)
dim(dat.no.sex.no.gender.no.age)
dim(dat.no.sex.no.gender)[1]-dim(dat.no.sex.no.gender.no.age)[1]
#dim(dat.no.sex.no.age)
#
#dat.no.sex.no.age <- dat.no.sex.no.age %>%
#  filter(NBR.IBD == 0)
#
#dim(dat.no.sex.no.age.no.ibd)
#
#dim(dat.no.sex.no.age)[1]-dim(dat.no.sex.no.age.no.ibd)[1]
dat.no.sex.no.gender.no.age.no.ibd <- dat.no.sex.no.gender.no.age
dat.glad <- dat.no.sex.no.gender.no.age.no.ibd
skimr::skim(dat.glad)
# Date of the first COVID-19 case in the United Kingdom (UK)
date_first_case_uk_january_31 <- as.POSIXct("2020-01-31")
# Date for assumed higher awareness of COVID / Lockdown in Italy 4. March 2020 / first festivals cancelled
date_higher_awareness_march_1 <- as.POSIXct("2020-03-01")
# Date the UK went into lockdown
date_uk_lockdown_march_23 <- as.POSIXct("2020-03-23")
dat.glad <- dat.glad %>%
mutate(
prepandemic_january_31_numeric =
if_else(
startDate.prepandemic > date_first_case_uk_january_31, # The GLAD sign up is dated before the cut off (> longer ago)
true = 0, # Participant has not signed up before the pandemic,
false = 1, # Participant has signed up before the pandemic,
missing = NA_real_
)
)
dat.glad <- dat.glad %>%
mutate(
prepandemic_january_31 =
recode_factor(
prepandemic_january_31_numeric,
"0" = "Sign up after 31. January",
"1" = "Sign up before 31. January"
)
)
dat.glad %>%
freq(prepandemic_january_31)
dat.glad <- dat.glad %>%
mutate(
prepandemic_march_1_numeric =
if_else(
startDate.prepandemic > date_higher_awareness_march_1, # The GLAD sign up is dated before the cut off (> longer ago)
true = 0, # Participant has not signed up before the pandemic,
false = 1, # Participant has signed up before the pandemic,
missing = NA_real_
)
)
dat.glad <- dat.glad %>%
mutate(
prepandemic_march_1 =
recode_factor(
prepandemic_march_1_numeric,
"0" = "Sign up after 1. March",
"1" = "Sign up before 1. March"
)
)
dat.glad %>%
freq(prepandemic_march_1)
dat.glad <- dat.glad %>%
mutate(
prepandemic_march_23_numeric =
if_else(
startDate.prepandemic > date_uk_lockdown_march_23, # The GLAD sign up is dated before the cut off (> longer ago)
true = 0, # Participant has not signed up before the pandemic,
false = 1, # Participant has signed up before the pandemic,
missing = NA_real_
)
)
dat.glad <- dat.glad %>%
mutate(
prepandemic_march_23 =
recode_factor(
prepandemic_march_23_numeric,
"0" = "Sign up after 23. March",
"1" = "Sign up before 23. March"
)
)
dat.glad %>%
freq(prepandemic_march_23)
dat.glad <- dat.glad %>%
mutate(
time_diff_sign_up_coping =
as.numeric(
difftime(           #this function does time1 - time2 as difftime(time1, time2...)
startDate.coping,    #should be start date for COPING (time1)
startDate.prepandemic),    #should be start date for GLAD (time2)
units = c("days")  #can also be "secs", "mins", "hours", "weeks"
)
)
dat.glad %>%
descr(
var = time_diff_sign_up_coping,
stats = "common"
)
# Difference score for prepandemic and retrospective phq sum scores
dat.glad <- dat.glad %>%
mutate(
phq.diff_score_prepan_retro =
as.numeric(
phq.sum_score_prepan - phq.sum_score_retro  # retrospective sum score MINUS prepandemic sum score
)
)
summary(dat.glad$phq.diff_score_prepan_retro)
# Difference score for prepandemic and baseline phq sum scores
dat.glad <- dat.glad %>%
mutate(
phq.diff_score_prepan_base =
as.numeric(
phq.sum_score_base - phq.sum_score_prepan  # baseline sum score MINUS prepandemic sum score
)
)
summary(dat.glad$phq.diff_score_prepan_base)
# Difference score for retrospective and baseline phq sum scores
dat.glad <- dat.glad %>%
mutate(
phq.diff_score_base_retro =
as.numeric(
phq.sum_score_base - phq.sum_score_retro  # baseline sum score MINUS retrospective sum score
)
)
summary(dat.glad$phq.diff_score_base_retro)
# Difference score for prepandemic and retrospective gad sum scores
dat.glad <- dat.glad %>%
mutate(
gad.diff_score_prepan_retro =
as.numeric(
gad.sum_score_prepan - gad.sum_score_retro  # retrospective sum score MINUS prepandemic sum score
)
)
summary(dat.glad$gad.diff_score_prepan_retro)
# Difference score for prepandemic and baseline gad sum scores
dat.glad <- dat.glad %>%
mutate(
gad.diff_score_prepan_base =
as.numeric(
gad.sum_score_base - gad.sum_score_prepan  # baseline sum score MINUS prepandemic sum score
)
)
summary(dat.glad$gad.diff_score_prepan_base)
# Difference score for retrospective and baseline gad sum scores
dat.glad <- dat.glad %>%
mutate(
gad.diff_score_base_retro =
as.numeric(
gad.sum_score_base - gad.sum_score_retro  # baseline sum score MINUS retrospective sum score
)
)
summary(dat.glad$gad.diff_score_base_retro)
# Difference score for prepandemic and baseline pcl sum scores
dat.glad <- dat.glad %>%
mutate(
pcl.diff_score_prepan_base =
as.numeric(
pcl.sum_score_base - pcl.sum_score_prepan  # baseline sum score MINUS prepandemic sum score
)
)
summary(dat.glad$pcl.diff_score_prepan_base)
summary(dat.glad$pcl.sum_score_retro)
freq(dat.glad$pcl.stressful_experience_repeated_images_retro)
freq(dat.glad$pcl.stressful_situation_avoiding_activities_retro)
freq(dat.glad$pcl.feeling_irritable_or_having_angry_outbursts_retro)
freq(dat.glad$pcl.stressful_experience_upset_reminded_retro)
freq(dat.glad$pcl.cut_people_feeling_distant_retro)
freq(dat.glad$pcl.difficulty_concentrating_retro)
# Difference score for prepandemic and retrospective oci-r sum scores
dat.glad <- dat.glad %>%
mutate(
ocir.diff_score_prepan_retro =
as.numeric(
ocir.sum_score_prepan - ocir.sum_score_retro  # retrospective sum score MINUS prepandemic sum score
)
)
summary(dat.glad$ocir.diff_score_prepan_retro)
# Difference score for prepandemic and baseline ocir sum scores
dat.glad <- dat.glad %>%
mutate(
ocir.diff_score_prepan_base =
as.numeric(
ocir.sum_score_prepan - ocir.sum_score_base  # prepandemic sum score MINUS baseline sum score
)
)
summary(dat.glad$ocir.diff_score_prepan_base)
# Difference score for retrospective and baseline ocir sum scores
dat.glad <- dat.glad %>%
mutate(
ocir.diff_score_base_retro =
as.numeric(
ocir.sum_score_base - ocir.sum_score_retro  # baseline sum score MINUS retrospective sum score
)
)
summary(dat.glad$ocir.diff_score_base_retro)
dat.glad <- dat.glad %>%
mutate(
data_group_phq_numeric =
case_when(
na_per_person_phq_base == 0 & na_per_person_phq_prepan == 0 & na_per_person_phq_retro == 0 ~ 5, #all complete baseline, prepan and retro
na_per_person_phq_base != 0 & na_per_person_phq_prepan != 0 & na_per_person_phq_retro == 0  ~ 4, #retro data only
na_per_person_phq_base == 0 & na_per_person_phq_prepan != 0 & na_per_person_phq_retro != 0  ~ 3, #baseline data only
na_per_person_phq_base == 0 & na_per_person_phq_prepan == 0 & na_per_person_phq_retro != 0  ~ 2, #prepan and baseline data only
na_per_person_phq_base == 0 & na_per_person_phq_prepan != 0 & na_per_person_phq_retro == 0 ~ 1,  #baseline and retro data only
na_per_person_phq_base != 0 & na_per_person_phq_prepan == 0 & na_per_person_phq_retro != 0  ~ 0  #prepan data only
)
)
dat.glad <- dat.glad %>%
mutate(
data_group_phq =
recode_factor(
data_group_phq_numeric,
"0" = "Only prepandemic data",
"1" = "Baseline and retrospective data",
"2" = "Prepandemic and baseline data",
"3" = "Baseline data only",
"4" = "Retrospective data only",
"5" = "All prepandemic, baseline and retrospective data"
)
)
table(dat.glad$data_group_phq)
dat.glad <- dat.glad %>%
mutate(
data_group_gad_numeric =
case_when(
na_per_person_gad_base == 0 & na_per_person_gad_prepan == 0 & na_per_person_gad_retro == 0 ~ 5, #all complete baseline, prepan and retro
na_per_person_gad_base != 0 & na_per_person_gad_prepan != 0 & na_per_person_gad_retro == 0  ~ 4, #retro data only
na_per_person_gad_base == 0 & na_per_person_gad_prepan != 0 & na_per_person_gad_retro != 0  ~ 3, #baseline data only
na_per_person_gad_base == 0 & na_per_person_gad_prepan == 0 & na_per_person_gad_retro != 0  ~ 2, #prepan and baseline data only
na_per_person_gad_base == 0 & na_per_person_gad_prepan != 0 & na_per_person_gad_retro == 0 ~ 1,  #baseline and retro data only
na_per_person_gad_base != 0 & na_per_person_gad_prepan == 0 & na_per_person_gad_retro != 0  ~ 0  #prepan data only
)
)
dat.glad <- dat.glad %>%
mutate(
data_group_gad =
recode_factor(
data_group_gad_numeric,
"0" = "Only prepandemic data",
"1" = "Baseline and retrospective data",
"2" = "Prepandemic and baseline data",
"3" = "Baseline data only",
"4" = "Retrospective data only",
"5" = "All prepandemic, baseline and retrospective data"
)
)
table(dat.glad$data_group_gad)
dat.glad <- dat.glad %>%
mutate(
data_group_pcl_numeric =
case_when(
na_per_person_pcl_base == 0 & na_per_person_pcl_prepan == 0 & na_per_person_pcl_retro == 0 ~ 5, #all complete baseline, prepan and retro
na_per_person_pcl_base != 0 & na_per_person_pcl_prepan != 0 & na_per_person_pcl_retro == 0  ~ 4, #retro data only
na_per_person_pcl_base == 0 & na_per_person_pcl_prepan != 0 & na_per_person_pcl_retro != 0  ~ 3, #baseline data only
na_per_person_pcl_base == 0 & na_per_person_pcl_prepan == 0 & na_per_person_pcl_retro != 0  ~ 2, #prepan and baseline data only
na_per_person_pcl_base == 0 & na_per_person_pcl_prepan != 0 & na_per_person_pcl_retro == 0 ~ 1,  #baseline and retro data only
na_per_person_pcl_base != 0 & na_per_person_pcl_prepan == 0 & na_per_person_pcl_retro != 0  ~ 0  #prepan data only
)
)
dat.glad <- dat.glad %>%
mutate(
data_group_pcl =
recode_factor(
data_group_pcl_numeric,
"0" = "Only prepandemic data",
"1" = "Baseline and retrospective data",
"2" = "Prepandemic and baseline data",
"3" = "Baseline data only",
"4" = "Retrospective data only",
"5" = "All prepandemic, baseline and retrospective data"
)
)
table(dat.glad$data_group_pcl)
coping.glad.respiratory.raw <- readRDS(file = paste0(data.raw_path, "/glad/respiratory_coping_glad.rds"))
dim(coping.glad.respiratory.raw)
colnames(coping.glad.respiratory.raw)
coping.glad.respiratory.raw.id <- coping.glad.respiratory.raw %>%
drop_na(externalDataReference) %>% # Drop NAs
distinct(externalDataReference, .keep_all = TRUE) %>% # Remove duplicates based on ID
separate(externalDataReference, into = c("Sample", "ID"), sep = 4) %>% # Split ID in Sample and Number
mutate(ID = as.numeric(ID)) %>%
select(
Sample, # Sample
ID, # ID
respiratory.breath_diarrhoea_fatigue_fever,
respiratory.worst_ill_feel,
respiratory.persistent_cough,
respiratory.skipping_meals_because_you_felt_unwell,
respiratory.was_your_sense_of_smell_impaired,
respiratory.was_your_sense_of_taste_impaired,
respiratory.feeling_tiredfatigued,
respiratory.throat_swab_coronavirus_nose,
respiratory.throat_swab_test_nose,
respiratory.coronavirus_antibody_test,
respiratory.results_antibody_test
) %>%
add_numeric(., exclude = exclude_cols) %>%
mutate_if(is.numeric, ~na_if(., -88)) %>% # Recode missing values to NAs in numeric variables
mutate_if(is.numeric, ~na_if(., -99)) %>%
mutate_if(is.numeric, ~na_if(., -77)) %>%
mutate_if(is.factor, ~na_if(., "Seen but not answered")) %>% # Recode missing values to NAs in factor variables
mutate_if(is.factor, ~na_if(., "Don't know")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to say")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Seen but not answered")) %>% # Drop empty factor levels
mutate_if(is.factor, ~forcats::fct_drop(., only = "Don't know")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to say"))
# Inspect dimensions
dim(coping.glad.respiratory.raw.id)
# Inspect colnames
colnames(coping.glad.respiratory.raw.id)
#Differences
dim(coping.glad.respiratory.raw)[1]-dim(coping.glad.respiratory.raw.id)[1]
#persistent cough
coping.glad.respiratory.raw.id %>%
ggplot(
mapping = aes(
y = respiratory.persistent_cough_numeric
)
) +
geom_bar() +
labs(
title = "Persistant cough"
)
#severe fatigue
coping.glad.respiratory.raw.id %>%
ggplot(
mapping = aes(
y = respiratory.feeling_tiredfatigued_numeric
)
) +
geom_bar() +
labs(
title = "Severe fatigue"
)
#skipped meals
coping.glad.respiratory.raw.id %>%
ggplot(
mapping = aes(
y = respiratory.skipping_meals_because_you_felt_unwell_numeric
)
) +
geom_bar() +
labs(
title = "Skipped meals"
)
#persistent cough
percentage_pcough <- ((0.5673*6452) + (0.4556*9186) + (0.3017*2434931))/(6452+9186+2434931)
percentage_pcough    # 0.3029762% of Menni et al(2020) have fatigue
quantile(x = coping.glad.respiratory.raw.id$respiratory.persistent_cough_numeric,
na.rm = TRUE,
probs = 1-percentage_pcough) # this gives 0.3029762% of the sample reporting fatigue when using the "mild symptoms" persistent cough response
#fatigue
percentage_fatigue <- ((0.298*6452) + (0.1556*9186) + (0.0871*2434931))/(6452+9186+2434931)
percentage_fatigue   # 0.08791204% of Menni et al(2020) have fatigue
quantile(x = coping.glad.respiratory.raw.id$respiratory.feeling_tiredfatigued_numeric,
na.rm = TRUE,
probs = 1-percentage_fatigue) #this gives 8% of the sample reporting fatigue when using the "severe symptoms" fatigue response
#skipped meals
percentage_skipped_meals <- ((0.4203*6452) + (0.2493*9186) + (0.1912*2434931))/(6452+9186+2434931)
percentage_skipped_meals    # 0.192021% of Menni et al(2020) have fatigue
quantile(x = coping.glad.respiratory.raw.id$respiratory.skipping_meals_because_you_felt_unwell_numeric,
na.rm = TRUE,
probs = 1-percentage_skipped_meals) # this gives 0.192021% of the sample reporting fatigue when using the "moderate symptoms" persistent cough response
#loss or smell or taste
coping.glad.respiratory.raw.id <- coping.glad.respiratory.raw.id %>%
mutate(
respiratory.anosmia_binary =
if_else(
respiratory.was_your_sense_of_smell_impaired_numeric == 1 | respiratory.was_your_sense_of_taste_impaired_numeric == 1,
1,
0
)
)
#persistent cough
coping.glad.respiratory.raw.id <- coping.glad.respiratory.raw.id %>%
mutate(
respiratory.pcough_binary =
if_else(
respiratory.persistent_cough_numeric >= 1, #those who score 1 or above (mild or above)
1,
0
)
)
#fatigue
coping.glad.respiratory.raw.id <- coping.glad.respiratory.raw.id %>%
mutate(
respiratory.fatigue_binary =
if_else(
respiratory.feeling_tiredfatigued_numeric >= 3, #those who score 3 (severe symptoms)
1,
0
)
)
#skipped meals
coping.glad.respiratory.raw.id <- coping.glad.respiratory.raw.id %>%
mutate(
respiratory.skipped_meals_binary =
if_else(
respiratory.skipping_meals_because_you_felt_unwell_numeric >= 2,
1,
0
)
)
freq(coping.glad.respiratory.raw.id$respiratory.anosmia_binary)
freq(coping.glad.respiratory.raw.id$respiratory.pcough_binary)
freq(coping.glad.respiratory.raw.id$respiratory.fatigue_binary)
freq(coping.glad.respiratory.raw.id$respiratory.skipped_meals_binary)
coping.glad.respiratory <- coping.glad.respiratory.raw.id
dat.glad.coping <- left_join(
x = dat.glad,
y = coping.glad.respiratory,
by = "ID"
)
dat.glad.coping <- dat.glad.coping %>%
mutate(
Sex_respiratory =
if_else(
Sex == "Male",
true = 1,
false = 0
)
)
dat.glad.coping <- dat.glad.coping %>%
mutate(
covid_symptoms =
if_else(
!is.na(respiratory.anosmia_binary) &
!is.na(respiratory.pcough_binary) &
!is.na(respiratory.fatigue_binary) &
!is.na(respiratory.skipped_meals_binary),
1,
0
)
)
dat.glad.coping %>%
freq(covid_symptoms, cumul = F)
# linear model of covid symptoms
dat.glad.coping <- dat.glad.coping %>%
mutate(
covid_probability =
(-1.32) -
(0.01*Age) +
(0.44*Sex_respiratory) +
(1.75*respiratory.anosmia_binary) +
(0.31*respiratory.pcough_binary) +
(0.49*respiratory.fatigue_binary) +
(0.39*respiratory.skipped_meals_binary)
)
# Calcualte the odds ratios
dat.glad.coping <- dat.glad.coping %>%
mutate(
covid_odds_ratio =
(exp(covid_probability) / (1 + exp(covid_probability)))
)
# generate binary cutt off variable for risk of COVID
dat.glad.coping <- dat.glad.coping %>%
mutate(
covid_odds_ratio_50_numeric =
case_when(
covid_odds_ratio >= 0 & covid_odds_ratio < 0.5 ~ "0", #cut off at 0.5
covid_odds_ratio >= 0.5 & covid_odds_ratio <= 1 ~ "1"
)
)
#create factor with labels
dat.glad.coping <- dat.glad.coping %>%
mutate(
covid_odds_ratio_50 =
recode_factor(
covid_odds_ratio_50_numeric,
"0" = "No COVID",
"1" = "Probable COVID"
)
)
#frequency table for covid variables
covid_variables <- c("covid_odds_ratio",
"covid_probability"
)
descr(x = dat.glad.coping[,covid_variables],
round.digits = 2,
transpose = TRUE)
## looking at cases over 0.5
freq(dat.glad.coping$covid_odds_ratio_50,
cumul = FALSE)
dat.glad.coping <- dat.glad.coping %>%
mutate(
covid_probable_case_incl_screening_numeric =
case_when(
respiratory.breath_diarrhoea_fatigue_fever_numeric == 0 ~ 0,
covid_odds_ratio_50_numeric == 0 ~ 0,
covid_odds_ratio_50_numeric == 1 ~ 1
)
)
#create factor with labels
dat.glad.coping <- dat.glad.coping %>%
mutate(
covid_probable_case_incl_screening =
recode_factor(
covid_probable_case_incl_screening_numeric,
"0" = "No COVID",
"1" = "Probable COVID"
)
)
dat.glad.coping %>%
freq(covid_probable_case_incl_screening,
cumul = FALSE)
