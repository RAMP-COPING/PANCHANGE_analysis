respiratory.throat_swab_test_nose,
respiratory.coronavirus_antibody_test,
respiratory.results_antibody_test
) %>%
add_numeric(., exclude = exclude_cols) %>%
mutate_if(is.numeric, ~na_if(., -88)) %>% # Recode missing values to NAs in numeric variables
mutate_if(is.numeric, ~na_if(., -99)) %>%
mutate_if(is.numeric, ~na_if(., -77)) %>%
mutate_if(is.factor, ~na_if(., "Seen but not answered")) %>% # Recode missing values to NAs in factor variables
mutate_if(is.factor, ~na_if(., "Don't know")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to say")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Seen but not answered")) %>% # Drop empty factor levels
mutate_if(is.factor, ~forcats::fct_drop(., only = "Don't know")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to say"))
# Inspect dimensions
dim(coping.glad.respiratory.raw.id)
# Inspect colnames
colnames(coping.glad.respiratory.raw.id)
#Differences
dim(coping.glad.respiratory.raw)[1]-dim(coping.glad.respiratory.raw.id)[1]
}
if(GLAD == TRUE){
respiratory.raw.id <- coping.glad.respiratory.raw.id
}
if(EDGI == TRUE){
coping.edgi.respiratory.raw <- readRDS(file = paste0(data.raw_path, "/edgi/respiratory_coping_edgi.rds"))
dim(coping.edgi.respiratory.raw)
colnames(coping.edgi.respiratory.raw)
}
if(EDGI == TRUE){
coping.edgi.respiratory.raw.id <- coping.edgi.respiratory.raw %>%
drop_na(externalDataReference) %>% # Drop NAs
distinct(externalDataReference, .keep_all = TRUE) %>% # Remove duplicates based on ID
separate(externalDataReference, into = c("Sample", "ID"), sep = 4) %>% # Split ID in Sample and Number
mutate(ID = as.numeric(ID)) %>%
select(
Sample, # Sample
ID, # ID
respiratory.breath_diarrhoea_fatigue_fever = respiratory.unusual_shortness_breath_diarrhoea,
respiratory.worst_ill_feel,
respiratory.persistent_cough,
respiratory.skipping_meals_because_you_felt_unwell,
respiratory.was_your_sense_of_smell_impaired,
respiratory.was_your_sense_of_taste_impaired,
respiratory.feeling_tiredfatigued,
respiratory.throat_swab_coronavirus_nose,
respiratory.throat_swab_test_nose,
respiratory.coronavirus_antibody_test,
respiratory.results_antibody_test
) %>%
add_numeric(., exclude = exclude_cols) %>%
mutate_if(is.numeric, ~na_if(., -88)) %>% # Recode missing values to NAs in numeric variables
mutate_if(is.numeric, ~na_if(., -99)) %>%
mutate_if(is.numeric, ~na_if(., -77)) %>%
mutate_if(is.factor, ~na_if(., "Seen but not answered")) %>% # Recode missing values to NAs in factor variables
mutate_if(is.factor, ~na_if(., "Don't know")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to say")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Seen but not answered")) %>% # Drop empty factor levels
mutate_if(is.factor, ~forcats::fct_drop(., only = "Don't know")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to say"))
# Inspect dimensions
dim(coping.edgi.respiratory.raw.id)
# Inspect colnames
colnames(coping.edgi.respiratory.raw.id)
#Differences
dim(coping.edgi.respiratory.raw)[1]-dim(coping.edgi.respiratory.raw.id)[1]
}
if(EDGI == TRUE){
respiratory.raw.id <- coping.edgi.respiratory.raw.id
}
if(NBR == TRUE){
coping.nbr.respiratory.raw <- readRDS(file = paste0(data.raw_path, "/nbr/respiratory_coping_nbr.rds"))
dim(coping.nbr.respiratory.raw)
colnames(coping.nbr.respiratory.raw)
}
if(NBR == TRUE){
coping.nbr.respiratory.raw.id <- coping.nbr.respiratory.raw %>%
drop_na(subjectid) %>% # Drop NAs
distinct(subjectid, .keep_all = TRUE) %>% # Remove duplicates based on ID
separate(subjectid, into = c("Sample", "ID.intm"), sep = 6) %>% # Split ID in Sample and Number
separate(ID.intm, into = "ID", sep = 7) %>%
mutate(ID = as.numeric(ID)) %>%
select(
Sample, # Sample
ID, # ID
respiratory.breath_diarrhoea_fatigue_fever = respiratory.unusual_shortness_breath_diarrhoea,
respiratory.worst_ill_feel,
respiratory.persistent_cough,
respiratory.skipping_meals_because_you_felt_unwell,
respiratory.was_your_sense_of_smell_impaired,
respiratory.was_your_sense_of_taste_impaired,
respiratory.feeling_tiredfatigued,
respiratory.throat_swab_coronavirus_nose,
respiratory.throat_swab_test_nose,
respiratory.coronavirus_antibody_test,
respiratory.results_antibody_test
) %>%
add_numeric(., exclude = exclude_cols) %>%
mutate_if(is.numeric, ~na_if(., -88)) %>% # Recode missing values to NAs in numeric variables
mutate_if(is.numeric, ~na_if(., -99)) %>%
mutate_if(is.numeric, ~na_if(., -77)) %>%
mutate_if(is.factor, ~na_if(., "Seen but not answered")) %>% # Recode missing values to NAs in factor variables
mutate_if(is.factor, ~na_if(., "Don't know")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to say")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Seen but not answered")) %>% # Drop empty factor levels
mutate_if(is.factor, ~forcats::fct_drop(., only = "Don't know")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to say"))
# Inspect dimensions
dim(coping.nbr.respiratory.raw.id)
# Inspect colnames
colnames(coping.nbr.respiratory.raw.id)
#Differences
dim(coping.nbr.respiratory.raw)[1]-dim(coping.nbr.respiratory.raw.id)[1]
}
if(NBR == TRUE){
respiratory.raw.id <- coping.nbr.respiratory.raw.id
}
if(RAMP == TRUE){
ramp.respiratory.raw <- readRDS(file = paste0(data.raw_path, "/ramp/respiratory_ramp.rds"))
dim(ramp.respiratory.raw)
colnames(ramp.respiratory.raw)
}
if(RAMP == TRUE){
ramp.respiratory.raw.id <- ramp.respiratory.raw %>%
drop_na(`Login ID`) %>% # Drop NAs
distinct(`Login ID`, .keep_all = TRUE) %>% # Remove duplicates based on ID
separate(`Login ID`, into = c("Sample", "ID"), sep = 4) %>% # Split ID in Sample and Number
mutate(ID = as.numeric(ID)) %>%
select(
Sample, # Sample
ID, # ID
respiratory.breath_diarrhoea_fatigue_fever = respiratory.experienced_symptoms_unusual_shortness,
respiratory.worst_ill_feel,
respiratory.persistent_cough,
respiratory.skipping_meals_because_you_felt_unwell,
respiratory.was_your_sense_of_smell_impaired = respiratory.smell_impaired_sense_weeks,
respiratory.was_your_sense_of_taste_impaired = respiratory.taste_impaired_sense_weeks,
respiratory.feeling_tiredfatigued,
respiratory.throat_swab_coronavirus_nose,
respiratory.throat_swab_test_nose,
respiratory.coronavirus_week_antibody_test,
respiratory.results_antibody_test
) %>%
add_numeric(., exclude = exclude_cols) %>%
mutate_if(is.numeric, ~na_if(., -88)) %>% # Recode missing values to NAs in numeric variables
mutate_if(is.numeric, ~na_if(., -99)) %>%
mutate_if(is.numeric, ~na_if(., -77)) %>%
mutate_if(is.factor, ~na_if(., "Seen but not answered")) %>% # Recode missing values to NAs in factor variables
mutate_if(is.factor, ~na_if(., "Don't know")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to say")) %>%
mutate_if(is.factor, ~na_if(., "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Seen but not answered")) %>% # Drop empty factor levels
mutate_if(is.factor, ~forcats::fct_drop(., only = "Don't know")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to answer")) %>%
mutate_if(is.factor, ~forcats::fct_drop(., only = "Prefer not to say"))
# Inspect dimensions
dim(ramp.respiratory.raw.id)
# Inspect colnames
colnames(ramp.respiratory.raw.id)
#Differences
dim(ramp.respiratory.raw)[1]-dim(ramp.respiratory.raw.id)[1]
}
if(RAMP == TRUE){
respiratory.raw.id <- ramp.respiratory.raw.id
}
#persistent cough
respiratory.raw.id %>%
ggplot(
mapping = aes(
y = respiratory.persistent_cough_numeric
)
) +
geom_bar() +
labs(
title = "Persistant cough"
)
#severe fatigue
respiratory.raw.id %>%
ggplot(
mapping = aes(
y = respiratory.feeling_tiredfatigued_numeric
)
) +
geom_bar() +
labs(
title = "Severe fatigue"
)
#skipped meals
respiratory.raw.id %>%
ggplot(
mapping = aes(
y = respiratory.skipping_meals_because_you_felt_unwell_numeric
)
) +
geom_bar() +
labs(
title = "Skipped meals"
)
#persistent cough
percentage_pcough <- ((0.5673*6452) + (0.4556*9186) + (0.3017*2434931))/(6452+9186+2434931)
percentage_pcough    # 0.3029762% of Menni et al(2020) have fatigue
quantile(x = respiratory.raw.id$respiratory.persistent_cough_numeric,
na.rm = TRUE,
probs = 1-percentage_pcough) # this gives 0.3029762% of the sample reporting fatigue when using the "mild symptoms" persistent cough response
#fatigue
percentage_fatigue <- ((0.298*6452) + (0.1556*9186) + (0.0871*2434931))/(6452+9186+2434931)
percentage_fatigue   # 0.08791204% of Menni et al(2020) have fatigue
quantile(x = respiratory.raw.id$respiratory.feeling_tiredfatigued_numeric,
na.rm = TRUE,
probs = 1-percentage_fatigue) #this gives 8% of the sample reporting fatigue when using the "severe symptoms" fatigue response
#skipped meals
percentage_skipped_meals <- ((0.4203*6452) + (0.2493*9186) + (0.1912*2434931))/(6452+9186+2434931)
percentage_skipped_meals    # 0.192021% of Menni et al(2020) have fatigue
quantile(x = respiratory.raw.id$respiratory.skipping_meals_because_you_felt_unwell_numeric,
na.rm = TRUE,
probs = 1-percentage_skipped_meals) # this gives 0.192021% of the sample reporting fatigue when using the "moderate symptoms" persistent cough response
#loss or smell or taste
respiratory.raw.id <- respiratory.raw.id %>%
mutate(
respiratory.anosmia_binary =
if_else(
respiratory.was_your_sense_of_smell_impaired_numeric == 1 | respiratory.was_your_sense_of_taste_impaired_numeric == 1,
1,
0
)
)
#persistent cough
respiratory.raw.id <- respiratory.raw.id %>%
mutate(
respiratory.pcough_binary =
if_else(
respiratory.persistent_cough_numeric >= 1, #those who score 1 or above (mild or above)
1,
0
)
)
#fatigue
respiratory.raw.id <- respiratory.raw.id %>%
mutate(
respiratory.fatigue_binary =
if_else(
respiratory.feeling_tiredfatigued_numeric >= 3, #those who score 3 (severe symptoms)
1,
0
)
)
#skipped meals
respiratory.raw.id <- respiratory.raw.id %>%
mutate(
respiratory.skipped_meals_binary =
if_else(
respiratory.skipping_meals_because_you_felt_unwell_numeric >= 2,
1,
0
)
)
freq(respiratory.raw.id$respiratory.anosmia_binary)
freq(respiratory.raw.id$respiratory.pcough_binary)
freq(respiratory.raw.id$respiratory.fatigue_binary)
freq(respiratory.raw.id$respiratory.skipped_meals_binary)
respiratory <- respiratory.raw.id
dat.coping <- left_join(
x = dat,
y = respiratory,
by = c("Sample", "ID")
)
if(GLAD == TRUE | NBR == TRUE | EDGI == TRUE){
dat.coping <- dat.coping %>%
mutate(
Sex_respiratory =
if_else(
Sex == "Male",
true = 1,
false = 0,
missing = NA_real_
)
)
}
if(RAMP == TRUE){
dat.coping <- dat.coping %>%
mutate(
Sex_respiratory =
if_else(
Gender == "Male" &
Transgender_uncleaned == "No",
true = 1,
false = 0,
missing = NA_real_
)
)
}
if(RAMP == TRUE){
dat.coping <- dat.coping %>%
mutate(
Age =
case_when(
age_category_full == "16-18" ~ 17,
age_category_full == "19-25" ~ 22,
age_category_full == "26-35" ~ 30.5,
age_category_full == "36-45" ~ 40.5,
age_category_full == "46-55" ~ 50.5,
age_category_full == "56-65" ~ 60.5,
age_category_full == "66-70" ~ 68,
age_category_full == "71-75" ~ 73,
age_category_full == "76-80" ~ 78,
age_category_full == "81-85" ~ 83,
age_category_full == "86-90" ~ 88,
age_category_full == "91-100" ~ 93,
age_category_full == "100+" ~ 100
)
)
}
dat.coping <- dat.coping %>%
mutate(
covid_symptoms =
if_else(
!is.na(respiratory.anosmia_binary) &
!is.na(respiratory.pcough_binary) &
!is.na(respiratory.fatigue_binary) &
!is.na(respiratory.skipped_meals_binary),
1,
0
)
)
dat.coping %>%
freq(covid_symptoms, cumul = F)
# linear model of covid symptoms
dat.coping <- dat.coping %>%
mutate(
covid_probability =
(-1.32) -
(0.01*Age) +
(0.44*Sex_respiratory) +
(1.75*respiratory.anosmia_binary) +
(0.31*respiratory.pcough_binary) +
(0.49*respiratory.fatigue_binary) +
(0.39*respiratory.skipped_meals_binary)
)
# Calcualte the odds ratios
dat.coping <- dat.coping %>%
mutate(
covid_odds_ratio =
(exp(covid_probability) / (1 + exp(covid_probability)))
)
# generate binary cutt off variable for risk of COVID
dat.coping <- dat.coping %>%
mutate(
covid_odds_ratio_50_numeric =
case_when(
covid_odds_ratio >= 0 & covid_odds_ratio < 0.5 ~ "0", #cut off at 0.5
covid_odds_ratio >= 0.5 & covid_odds_ratio <= 1 ~ "1"
)
)
#create factor with labels
dat.coping <- dat.coping %>%
mutate(
covid_odds_ratio_50 =
recode_factor(
covid_odds_ratio_50_numeric,
"0" = "No COVID",
"1" = "Probable COVID"
)
)
#frequency table for covid variables
covid_variables <- c("covid_odds_ratio",
"covid_probability"
)
descr(x = dat.coping[,covid_variables],
round.digits = 2,
transpose = TRUE)
## looking at cases over 0.5
freq(dat.coping$covid_odds_ratio_50,
cumul = FALSE)
dat.coping <- dat.coping %>%
mutate(
covid_probable_case_incl_screening_numeric =
case_when(
respiratory.breath_diarrhoea_fatigue_fever_numeric == 0 ~ 0,
covid_odds_ratio_50_numeric == 0 ~ 0,
covid_odds_ratio_50_numeric == 1 ~ 1
)
)
#create factor with labels
dat.coping <- dat.coping %>%
mutate(
covid_probable_case_incl_screening =
recode_factor(
covid_probable_case_incl_screening_numeric,
"0" = "No COVID",
"1" = "Probable COVID"
)
)
dat.coping %>%
freq(covid_probable_case_incl_screening,
cumul = FALSE)
summarytools::dfSummary(
dat.coping,
graph.col = F,
valid.col = F,
labels.col = F)
if(GLAD == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/glad.rds"))
}
if(EDGI == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/edgi.rds"))
}
if(NBR == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/nbr.rds"))
}
if(RAMP == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/ramp.rds"))
}
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
library(tidyverse)
library(skimr)
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
glad <- read_rds(path = paste0(data_path, "/glad.rds"))
dim(glad)
edgi <- read_rds(path = paste0(data_path, "/edgi.rds"))
dim(edgi)
nbr <- read_rds(path = paste0(data_path, "/nbr.rds"))
dim(nbr)
ramp <- read_rds(path = paste0(data_path, "/ramp.rds"))
dim(ramp)
dat <- bind_rows(
glad,
edgi,
nbr,
ramp
)
#look at the data
skimr::skim(dat)
saveRDS(object = dat, file = paste0(data_path, "/four_cohorts.rds"))
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
#install.packages("summarytools")
#install.packages("tidyverse")
#install.packages("psych")
#install.packages("eeptools")
#install.packages("skimr")
library(knitr)
library(summarytools)
library(psych)
library(eeptools) # Needed to calculate age from birthdate
library(tidyverse)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
palette = COPINGpalette2
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts.rds"))
dim(dat)
colnames(dat)
