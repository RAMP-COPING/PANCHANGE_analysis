mutate(percent =
round(n / sum(n) *  100, 1))
dat.retro_ethnicity_pie <- dat.retro_ethnicity_pie %>%
mutate(Ethnicity_collapsed =
fct_recode(Ethnicity_collapsed,
"White" = "European",
"Asian or Asian British" = "Asian or Asian British",
"Black or Black British" = "African or African British",
"Mixed or multiple ethnic origins" = "Mixed or multiple ethnic origins",
"Other" = "Other"
))
dat.retro_ethnicity_pie %>%
ggplot(aes(x = "", y = percent, fill = Ethnicity_collapsed)) +
geom_col(stat = "identity") +
coord_polar("y",start=0) +
theme_void() +
scale_fill_manual(values =  COPINGpalette5) +
facet_wrap(~ Sample_plot, nrow = 1) +
theme(legend.position = "top",
legend.title = element_blank()) +
ggrepel::geom_label_repel(aes(label = paste0(percent, "%")),
position = position_stack(vjust = 0.5),
show.legend = FALSE)
GLAD.prepan_with_EDGI %>%
ggplot(aes(x = employment_prior_covid)) +
geom_bar(fill = COPINGpalette6) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "",
y = "")
dat.retro_employment_plot <- dat.retro %>%
group_by(Sample_plot, employment_prior_covid) %>%
summarise(n = n()) %>%
drop_na()
retro_employ_plot <- dat.retro_employment_plot %>%
ggplot(aes(x = employment_prior_covid, y = n, fill = Sample_plot)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Employment status",
y = "N participants") +
theme(legend.position = "bottom") +
theme(legend.title = element_blank()) +
scale_y_continuous(breaks = seq(0, 6000, by = 1000)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
dat.retro_employ_pie <- dat.retro %>%
group_by(Sample_plot, employment_prior_covid) %>%
summarise(n = n()) %>%
drop_na() %>%
mutate(percent =
round(n / sum(n) *  100, 1))
dat.retro_employ_pie %>%
ggplot(aes(x = "", y = percent, fill = employment_prior_covid)) +
geom_col(stat = "identity") +
coord_polar("y",start=0) +
theme_void() +
scale_fill_manual(values =  COPINGpalette5) +
facet_wrap(~ Sample_plot, nrow = 1) +
theme(legend.position = "top",
legend.title = element_blank()) +
ggrepel::geom_label_repel(aes(label = paste0(percent, "%")),
position = position_stack(vjust = 0.6),
show.legend = FALSE)
GLAD.prepan_with_EDGI <- GLAD.prepan_with_EDGI %>%
mutate(personality_disorder_numeric =
case_when(
personality_cluster_a_numeric == 1 | personality_cluster_b_numeric == 1 | personality_cluster_c_numeric == 1 ~ 1,
personality_cluster_a_numeric == 0 & personality_cluster_b_numeric == 0 & personality_cluster_c_numeric == 0 ~ 0
))
#Check that it worked
head(GLAD.prepan$personality_cluster_a_numeric, 15)
head(GLAD.prepan$personality_cluster_b_numeric, 15)
head(GLAD.prepan$personality_cluster_c_numeric, 15)
head(GLAD.prepan$personality_disorder_numeric, 15)
dat.retro <- dat.retro %>%
mutate(personality_disorder_numeric =
case_when(
personality_cluster_a_numeric == 1 | personality_cluster_b_numeric == 1 | personality_cluster_c_numeric == 1 ~ 1,
personality_cluster_a_numeric == 0 & personality_cluster_b_numeric == 0 & personality_cluster_c_numeric == 0 ~ 0
))
#Check that it worked
head(dat.retro$personality_cluster_a_numeric, 15)
head(dat.retro$personality_cluster_b_numeric, 15)
head(dat.retro$personality_cluster_c_numeric, 15)
head(dat.retro$personality_disorder_numeric, 15)
GLAD.prepan_mdd_positive <- GLAD.prepan_with_EDGI %>%
select(depressive_disorders_numeric) %>%
filter(depressive_disorders_numeric == 1)
GLAD.prepan_mdd_positive <- GLAD.prepan_mdd_positive %>%
summarise("Depressive disorders" = n())
GLAD.prepan_anxi_positive <- GLAD.prepan_with_EDGI %>%
select(anxiety_disorders_numeric) %>%
filter(anxiety_disorders_numeric == 1)
GLAD.prepan_anxi_positive <- GLAD.prepan_anxi_positive %>%
summarise("Anxiety disorders" = n())
GLAD.prepan_ED_positive <- GLAD.prepan_with_EDGI %>%
select(eating_disorders_numeric) %>%
filter(eating_disorders_numeric == 1)
GLAD.prepan_ED_positive <- GLAD.prepan_ED_positive %>%
summarise("Eating disorders" = n())
GLAD.prepan_OCD_positive <- GLAD.prepan_with_EDGI %>%
select(obsessive_compulsive_disorders_numeric) %>%
filter(obsessive_compulsive_disorders_numeric == 1)
GLAD.prepan_OCD_positive <- GLAD.prepan_OCD_positive %>%
summarise("OCDs" = n())
GLAD.prepan_psychosis_positive <- GLAD.prepan_with_EDGI %>%
select(psychotic_disorders_numeric) %>%
filter(psychotic_disorders_numeric == 1)
GLAD.prepan_psychosis_positive <- GLAD.prepan_psychosis_positive %>%
summarise("Psychotic disorders" = n())
GLAD.prepan_ASD_positive <- GLAD.prepan_with_EDGI %>%
select(autism_spectrum_disorder_numeric) %>%
filter(autism_spectrum_disorder_numeric == 1)
GLAD.prepan_ASD_positive <- GLAD.prepan_ASD_positive %>%
summarise("ASD" = n())
GLAD.prepan_ADHD_positive <- GLAD.prepan_with_EDGI %>%
select(mhd.attention_deficit_hyperactivity_disorder_numeric) %>%
filter(mhd.attention_deficit_hyperactivity_disorder_numeric == 1)
GLAD.prepan_ADHD_positive <- GLAD.prepan_ADHD_positive %>%
summarise("ADHD" = n())
GLAD.prepan_PD_positive <- GLAD.prepan_with_EDGI %>%
select(personality_disorder_numeric) %>%
filter(personality_disorder_numeric == 1)
GLAD.prepan_PD_positive <- GLAD.prepan_PD_positive %>%
summarise("Personality disorders" = n())
GLAD.prepan_BD_positive <- GLAD.prepan_with_EDGI %>%
select(mhd.mania_hypomania_bipolar_or_manicdepression_numeric) %>%
filter(mhd.mania_hypomania_bipolar_or_manicdepression_numeric == 1)
GLAD.prepan_BD_positive <- GLAD.prepan_BD_positive %>%
summarise("Bipolar disorders" = n())
GLAD.prepan_PTSD_positive <- GLAD.prepan_with_EDGI %>%
select(mhd.posttraumatic_stress_disorder_ptsd_numeric) %>%
filter(mhd.posttraumatic_stress_disorder_ptsd_numeric == 1)
GLAD.prepan_PTSD_positive <- GLAD.prepan_PTSD_positive %>%
summarise("PTSD" = n())
GLAD.prepan_control_positive <- GLAD.prepan_with_EDGI %>%
select(control_numeric) %>%
filter(control_numeric == 1)
GLAD.prepan_control_positive <- GLAD.prepan_control_positive %>%
summarise("No diagnosis" = n())
GLAD.prepan_positive_diagnosis_GLADEDGI <- GLAD.prepan_mdd_positive %>%
cbind(GLAD.prepan_anxi_positive,
GLAD.prepan_ED_positive,
GLAD.prepan_OCD_positive,
GLAD.prepan_psychosis_positive,
GLAD.prepan_ASD_positive,
GLAD.prepan_ADHD_positive,
GLAD.prepan_PD_positive,
GLAD.prepan_BD_positive,
GLAD.prepan_PTSD_positive,
GLAD.prepan_control_positive)
head(GLAD.prepan_positive_diagnosis_GLADEDGI)
GLAD.prepan_positive_diagnosis_GLADEDGI <- GLAD.prepan_positive_diagnosis_GLADEDGI %>%
gather('Depressive disorders', 'Anxiety disorders', 'Eating disorders', 'OCDs', 'Psychotic disorders', 'ASD', 'ADHD', 'Personality disorders', 'Bipolar disorders', 'PTSD', 'No diagnosis', key = "Diagnosis", value = positive_n)
head(GLAD.prepan_positive_diagnosis_GLADEDGI, 9)
GLAD.prepan_positive_diagnosis_GLADEDGI %>%
ggplot(aes(x = reorder(Diagnosis, -positive_n), y = positive_n)) +
geom_bar(stat = "identity", fill = COPINGpalette11) +
scale_fill_manual(values = COPINGpalette11) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(title = "Mental health diagnoses of the GLAD/EDGI prepan cohort",
subtitle = paste("N =", dim(GLAD.retro)[1]),
x = "",
y = "") +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme(legend.position = "top") +
theme(legend.title = element_blank())
dat.retro_mdd_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(depressive_disorders_numeric) %>%
filter(depressive_disorders_numeric == 1)
dat.retro_mdd_by_sample <- dat.retro_mdd_by_sample %>%
group_by(Sample_plot) %>%
summarise("Depressive disorders" = n())
dat.retro_anxi_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(anxiety_disorders_numeric) %>%
filter(anxiety_disorders_numeric == 1)
dat.retro_anxi_by_sample <- dat.retro_anxi_by_sample %>%
group_by(Sample_plot) %>%
summarise("Anxiety disorders" = n())
dat.retro_ED_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(eating_disorders_numeric) %>%
filter(eating_disorders_numeric == 1)
dat.retro_ED_by_sample <- dat.retro_ED_by_sample %>%
group_by(Sample_plot) %>%
summarise("Eating disorders" = n())
dat.retro_OCD_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(obsessive_compulsive_disorders_numeric) %>%
filter(obsessive_compulsive_disorders_numeric == 1)
dat.retro_OCD_by_sample <- dat.retro_OCD_by_sample %>%
group_by(Sample_plot) %>%
summarise("OCDRs" = n())
dat.retro_psychosis_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(psychotic_disorders_numeric) %>%
filter(psychotic_disorders_numeric == 1)
dat.retro_psychosis_by_sample <- dat.retro_psychosis_by_sample %>%
group_by(Sample_plot) %>%
summarise("Psychotic disorders" = n())
dat.retro_ASD_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(autism_spectrum_disorder_numeric) %>%
filter(autism_spectrum_disorder_numeric == 1)
dat.retro_ASD_by_sample <- dat.retro_ASD_by_sample %>%
group_by(Sample_plot) %>%
summarise("ASD" = n())
dat.retro_ADHD_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(mhd.attention_deficit_hyperactivity_disorder_numeric) %>%
filter(mhd.attention_deficit_hyperactivity_disorder_numeric == 1)
dat.retro_ADHD_by_sample <- dat.retro_ADHD_by_sample %>%
group_by(Sample_plot) %>%
summarise("ADHD" = n())
dat.retro_PD_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(personality_disorder_numeric) %>%
filter(personality_disorder_numeric == 1)
dat.retro_PD_by_sample <- dat.retro_PD_by_sample %>%
group_by(Sample_plot) %>%
summarise("Personality disorders" = n())
dat.retro_BD_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(mhd.mania_hypomania_bipolar_or_manicdepression_numeric) %>%
filter(mhd.mania_hypomania_bipolar_or_manicdepression_numeric == 1)
dat.retro_BD_by_sample <- dat.retro_BD_by_sample %>%
group_by(Sample_plot) %>%
summarise("Bipolar disorders" = n())
dat.retro_PTSD_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(mhd.posttraumatic_stress_disorder_ptsd_numeric) %>%
filter(mhd.posttraumatic_stress_disorder_ptsd_numeric == 1)
dat.retro_PTSD_by_sample <- dat.retro_PTSD_by_sample %>%
group_by(Sample_plot) %>%
summarise("PTSD" = n())
dat.retro_control_by_sample <- dat.retro %>%
group_by(Sample_plot) %>%
select(control_numeric) %>%
filter(control_numeric == 1)
dat.retro_control_by_sample <- dat.retro_control_by_sample %>%
group_by(Sample_plot) %>%
summarise("No diagnosis" = n())
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_mdd_by_sample,
dat.retro_anxi_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_ED_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_OCD_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_psychosis_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_ASD_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_ADHD_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_PD_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_BD_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_PTSD_by_sample,
by = "Sample_plot")
dat.retro_positive_diagnosis_by_sample <- left_join(dat.retro_positive_diagnosis_by_sample,
dat.retro_control_by_sample,
by = "Sample_plot")
head(dat.retro_positive_diagnosis_by_sample)
dat.retro_positive_diagnosis_by_sample <- dat.retro_positive_diagnosis_by_sample %>%
gather('Depressive disorders', 'Anxiety disorders', 'Eating disorders', 'OCDRs', 'Psychotic disorders', 'ASD', 'ADHD', 'Personality disorders', 'Bipolar disorders', 'PTSD', 'No diagnosis', key = "Diagnosis", value = positive_n)
head(dat.retro_positive_diagnosis_by_sample, 9)
retro_diagnosis_plot <- dat.retro_positive_diagnosis_by_sample %>%
ggplot(aes(x = reorder(Diagnosis, -positive_n, sum), y = positive_n, fill = Sample_plot)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Mental health diagnosis",
y = "N participants") +
ylim(0, 20000) +
theme(axis.text.x = element_text(angle = 70, vjust = 0.5)) +
theme(legend.position = "top") +
theme(legend.title = element_blank()) +
geom_text(aes(label = stat(y), group = Diagnosis),
stat = "summary",
fun = sum,
vjust = -1,
colour = "black") +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
arranged_gender_plot <- retro_gender_plot +
theme(legend.position = "none") +
scale_x_discrete(guide = guide_axis(n.dodge = 2),
expand = expansion(mult = c(0.3, 0.4)))
arranged_employ_plot <- retro_employ_plot +
theme(legend.position = "none") +
scale_x_discrete(guide = guide_axis(n.dodge = 2))
#Combine retro age, gender and employ together
ggarrange(retro_age_plot,
ggarrange(arranged_gender_plot, arranged_employ_plot, ncol = 2),
nrow = 2,
common.legend = TRUE)
dat.retro_gender_distribution <- dat.retro %>%
group_by(Gender_collapsed, Sample_plot) %>%
summarise(n = n())
labelled_arranged_gender_plot <- dat.retro_gender_distribution %>%
ggplot(aes(x = Gender_collapsed, y = n, fill = Sample_plot)) +
geom_bar(position = "dodge", stat = "identity") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Participant Gender",
y = "N participants") +
theme(legend.position = "none") +
theme(legend.title = element_blank()) +
geom_text(aes(label = n),
size = 3,
position = position_dodge(width=0.9),
vjust=-0.25) +
scale_x_discrete(guide = guide_axis(n.dodge = 2),
expand = expansion(mult = c(0.3, 0.4))) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))
#Combine retro age, gender and employ together
ggarrange(retro_age_plot,
ggarrange(labelled_arranged_gender_plot, arranged_employ_plot, ncol = 2),
nrow = 2,
common.legend = TRUE)
arranged_retro_ethnicity_white <- dat.retro_ethnicity_white %>%
ggplot(aes(x = Ethnicity_collapsed, y = n, fill = Sample_plot)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(title = "",
x = "Ethnic origin",
y = "N participants") +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme(legend.position = "none") +
theme(legend.title = element_blank()) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))# +
#  geom_text(aes(label = n),
#            size = 3,
#            position = position_dodge(width=0.9),
#            vjust=-0.25)
#Graph 2
arranged_retro_ethnicity_non_white <- dat.retro_ethnicity_non_white %>%
ggplot(aes(x = Ethnicity_collapsed, y = n, fill = Sample_plot)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(title = "",
x = "Ethnic origin",
y = "N participants") +
theme(legend.position = "bottom") +
theme(legend.title = element_blank()) +
#theme(legend.title = element_blank()) +
geom_text(aes(label = n),
size = 3,
position = position_dodge(width=0.9),
vjust=-0.25) +
scale_y_continuous(expand = expansion(mult = c(0.1, 0.2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
#arranged_retro_ethnicity_plot <- plot_grid(arranged_retro_ethnicity_white, arranged_retro_ethnicity_non_white, labels = "")
arranged_retro_age_plot <- dat.retro %>%
ggplot(aes(x = age_category_collapsed, fill = Sample_plot)) +
geom_bar(position = "dodge") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Age (years)",
y = "N participants") +
theme(legend.position = "none") +
theme(legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 70, vjust = 0.5)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
dat.retro_gender_male_female <- dat.retro_gender_distribution %>%
filter(Gender_collapsed != "Non-binary/Self-defined")
arranged_collapsed_gender_plot <- dat.retro_gender_male_female %>%
ggplot(aes(x = Gender_collapsed, y = n, fill = Sample_plot)) +
geom_bar(position = "dodge", stat = "identity") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Participant Gender",
y = "N participants",
caption = "Non-binary/Self-defined
GLAD/EDGI (243); NBR (39); RAMP (92)") +
theme(legend.position = "none") +
theme(legend.title = element_blank())  +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
arranged_employ_plot <- dat.retro_employment_plot %>%
ggplot(aes(x = employment_prior_covid, y = n, fill = Sample_plot)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Employment status",
y = "N participants") +
theme(legend.position = "none") +
theme(legend.title = element_blank()) +
scale_y_continuous(breaks = seq(0, 6000, by = 1000)) +
scale_x_discrete(guide = guide_axis(n.dodge = 3),
expand = expansion(mult = c(0.2, 0.3))) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
retro_matrix <- matrix(c(1, 2, 3, 4, 5, 5), nrow = 2, byrow = TRUE)
grid.arrange(arranged_collapsed_gender_plot, arranged_retro_age_plot, arranged_employ_plot,
arranged_retro_ethnicity_white, arranged_retro_ethnicity_non_white,
layout_matrix = retro_matrix,
nrow = 2)
#Remake gender plot without caption
arranged_collapsed_gender_plot <- dat.retro_gender_male_female %>%
ggplot(aes(x = Gender_collapsed, y = n, fill = Sample_plot)) +
geom_bar(position = "dodge", stat = "identity") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Participant Gender",
y = "N participants") +
theme(legend.position = "none") +
theme(legend.title = element_blank())  +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black"))
levels(dat.retro_ethnicity_non_white$Ethnicity_collapsed)
dat.retro_ethnicity_non_white <- dat.retro_ethnicity_non_white %>%
mutate(Ethnicity_collapsed =
fct_recode(Ethnicity_collapsed,
"Mixed or multiple origins" = "Mixed or multiple ethnic origins"))
arranged_retro_ethnicity_non_white <- dat.retro_ethnicity_non_white %>%
ggplot(aes(x = Ethnicity_collapsed, y = n, fill = Sample_plot)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = COPINGpalette3) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(title = "",
x = "Ethnic origin",
y = "N participants") +
theme(legend.position = "bottom") +
theme(legend.title = element_blank()) +
geom_text(aes(label = n),
size = 3,
position = position_dodge(width=0.9),
vjust=-0.25) +
scale_y_continuous(expand = expansion(mult = c(0.1, 0.2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) +
theme(axis.text.x = element_text(colour = "black"),
axis.text.y = element_text(colour = "black")) +
theme(legend.justification=c(1,0), legend.position=c(1, 0.95)) +
guides(fill = guide_legend(
nrow = 1,
override.aes = list(size = 4)
))
grid.arrange(arranged_collapsed_gender_plot, arranged_retro_age_plot, arranged_employ_plot,
arranged_retro_ethnicity_white, arranged_retro_ethnicity_non_white,
layout_matrix = retro_matrix,
nrow = 2,
#heights=c(1, 1.2),
bottom = textGrob("Non-binary/Self-defined: GLAD/EDGI (243); NBR (39); RAMP (92)", x = 1,
hjust = 1,
gp = gpar(fontface = 3L, fontsize = 9)))
arranged_retro_ethnicity_non_white
arranged_collapsed_gender_plot
dat.retro_gender_male_female
dat.retro_gender_male_female <- dat.retro_gender_distribution %>%
filter(Gender_collapsed == "Non-binary/Self-defined")
dat.retro_gender_male_female
dat.retro_gender_male_female <- dat.retro_gender_distribution %>%
filter(Gender_collapsed != "Non-binary/Self-defined")
dat.retro %>%
group_by(Sample_plot, Gender_collapsed) %>%
summarise(n = n())
grid.arrange(arranged_collapsed_gender_plot, arranged_retro_age_plot, arranged_employ_plot,
arranged_retro_ethnicity_white, arranged_retro_ethnicity_non_white,
layout_matrix = retro_matrix,
nrow = 2,
#heights=c(1, 1.2),
bottom = textGrob("Non-binary/Self-defined: GLAD (247); NBR/EDGI (41); RAMP (92)", x = 1,
hjust = 1,
gp = gpar(fontface = 3L, fontsize = 9)))
retro_diagnosis_plot
knitr::opts_chunk$set(echo = TRUE)
remove(list = ls())
library(tidyverse)
library(lubridate)
