#Edit the gad sum retro score as follows: if the pt reports no different since pandemic and there is a missing value for their retro score, impute their baseline score, else if there isn't a missing value for their retro score, leave it as it is.
impute_dat <- dat %>%
mutate(gad.sum_score_retro =
case_when(gad.pandemic_felt_feelings == "No different" & is.na(gad.sum_score_retro)                      ~ gad.sum_score_base,
!is.na(gad.sum_score_retro) ~ gad.sum_score_retro))
#Check that the Na's have been replaced with duplicated baseline sum scores
head(impute_dat$gad.sum_score_base, 30)
head(impute_dat$gad.sum_score_retro, 30)
#Visualise the phq summary scores for baseline and retro
head(dat$phq.sum_score_base, 30)
head(dat$phq.sum_score_retro, 30)
#Visualise the phq pandemic feelings variables
head(dat$phq.pandemic_felt_feelings, 10)
head(dat$phq.pandemic_felt_feelings_numeric, 10)
#Edit the phq sum retro score as follows: if the pt reports no different since pandemic and there is a missing value for their retro score, impute their baseline score, else if there isn't a missing value for their retro score, leave it as it is.
impute_dat <- dat %>%
mutate(phq.sum_score_retro =
case_when(phq.pandemic_felt_feelings == "No different" & is.na(phq.sum_score_retro)                      ~ phq.sum_score_base,
!is.na(phq.sum_score_retro) ~ phq.sum_score_retro))
#Check that the Na's have been replaced with duplicated baseline sum scores
head(impute_dat$phq.sum_score_base, 30)
head(impute_dat$phq.sum_score_retro, 30)
disorder_columns <- c(
"control_numeric",
"depressive_disorders_numeric",
"anxiety_disorders_numeric",
"mhd.posttraumatic_stress_disorder_ptsd_numeric",
"eating_disorders_numeric",
"obsessive_compulsive_disorders_numeric",
"mhd.attention_deficit_hyperactivity_disorder_numeric",
"mhd.personality_disorder_numeric",
"autism_spectrum_disorder_numeric",
"mhd.mania_hypomania_bipolar_or_manicdepression_numeric",
"psychotic_disorders_numeric"
)
# Select items for correlation matrix
mhd.items <- c(
"depressive_disorders",
"anxiety_disorders",
"eating_disorders",
"obsessive_compulsive_disorders",
"psychotic_disorders",
"mhd.mania_hypomania_bipolar_or_manicdepression",
"mhd.posttraumatic_stress_disorder_ptsd",
"autism_spectrum_disorder",
"mhd.attention_deficit_hyperactivity_disorder",
"mhd.personality_disorder",
"control"
)
# Calculate correlation matrix on specific columns (variables) from your data frame
mhd.corr.mat <- hetcor(
as.data.frame(dat[,mhd.items]), # Specify the data
use = "pairwise.complete.obs" # Use all pairwise observations
)
# Print the correlation matrix
print(mhd.corr.mat, digits = max(3, getOption("digits") - 3))
# Save the correlations from the correlation matrix in an object
mhd.corr.matrix <- as.matrix(mhd.corr.mat)
# Save the p values from the correlation matrix in an object
mhd.p.matrix <- as.matrix(mhd.corr.mat$tests)
corrplot(mhd.corr.matrix,
method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4","white","firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = mhd.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank" # Nonsignificant correlations have no colour
)
cor.mtest <- function(mat, conf.level = 0.95){
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for(i in 1:(n-1)){
for(j in (i+1):n){
tmp <- cor.test(mat[,i], mat[,j], conf.level = conf.level)
p.mat[i,j] <- p.mat[j,i] <- tmp$p.value
lowCI.mat[i,j] <- lowCI.mat[j,i] <- tmp$conf.int[1]
uppCI.mat[i,j] <- uppCI.mat[j,i] <- tmp$conf.int[2]
}
}
return(list(p.mat, lowCI.mat, uppCI.mat))
}
# Select items for correlation matrix
prepan_retro_items <- c(
"gad.sum_score_prepan",
"gad.sum_score_retro",
"phq.sum_score_prepan",
"phq.sum_score_retro"
)
#Create a data set with only the GLAD and EDGI
prepan_retro_dat <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Check that RAMP and NBR has been removed
prepan_retro_dat %>%
freq(Sample)
# Calculate correlation matrix on specific columns (variables) from your data frame
prepan_retro.corr.mat <- hetcor(
as.data.frame(prepan_retro_dat[,prepan_retro_items]), # Specify the data
use = "pairwise.complete.obs" # Use all pairwise observations
)
# Print the correlation matrix
print(prepan_retro.corr.mat, digits = max(3, getOption("digits") - 3))
# Save the correlations from the correlation matrix in an object
prepan_retro.corr.matrix <- as.matrix(prepan_retro.corr.mat)
# Save the p values from the correlation matrix in an object
prepan_retro.p.matrix <- as.matrix(prepan_retro.corr.mat$tests)
res1 <- cor.ci(prepan_retro.corr.matrix)
lowci <- cor.plot.upperLowerCi(res1)
lowci[upper.tri(lowci)] = t(lowci)[upper.tri(lowci)]
upci <- cor.plot.upperLowerCi(res1)
upci[lower.tri(upci)] = t(upci)[lower.tri(lowci)]
conf <- paste0("[", format(lowci, digits=2), " - ", format(upci, digits=2), "]")
xs <- row(lowci)
ys <- (ncol(lowci)+1) - col(lowci)
xs[lower.tri(xs,diag=TRUE)] <- 0
ys[lower.tri(ys,diag=TRUE)] <- 0
# Select items for correlation matrix
prepan_retro_items <- c(
"gad.sum_score_prepan",
"gad.sum_score_retro",
"phq.sum_score_prepan",
"phq.sum_score_retro"
)
#Create a data set with only the GLAD and EDGI
prepan_retro_dat <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Check that RAMP and NBR has been removed
prepan_retro_dat %>%
freq(Sample)
# Calculate correlation matrix on specific columns (variables) from your data frame
prepan_retro.corr.mat <- hetcor(
as.data.frame(prepan_retro_dat[,prepan_retro_items]), # Specify the data
use = "pairwise.complete.obs" # Use all pairwise observations
)
# Print the correlation matrix
print(prepan_retro.corr.mat, digits = max(3, getOption("digits") - 3))
# Save the correlations from the correlation matrix in an object
prepan_retro.corr.matrix <- as.matrix(prepan_retro.corr.mat)
# Save the p values from the correlation matrix in an object
prepan_retro.p.matrix <- as.matrix(prepan_retro.corr.mat$tests)
res1 <- cor.ci(prepan_retro.corr.matrix)
lowci <- cor.plot.upperLowerCi(res1)
lowci[upper.tri(lowci)] = t(lowci)[upper.tri(lowci)]
upci <- cor.plot.upperLowerCi(res1)
upci[lower.tri(upci)] = t(upci)[lower.tri(lowci)]
conf <- paste0("[", format(lowci, digits=2), " - ", format(upci, digits=2), "]")
xs <- row(lowci)
ys <- (ncol(lowci)+1) - col(lowci)
xs[lower.tri(xs,diag=TRUE)] <- 0
ys[lower.tri(ys,diag=TRUE)] <- 0
corrplot(prepan_retro.corr.matrix,
method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4","white","firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = prepan_retro.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank" # Nonsignificant correlations have no colour
)
text(xs, ys, conf, pos=1, cex=0.8)
#Create a data set with only the GLAD and EDGI participants
whole_retro_prepan_scatter <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Check that RAMP and NBR has been removed
whole_retro_prepan_scatter %>%
freq(Sample)
#Remove those saying "no different" since pandemic
whole_retro_prepan_gad_scatter <- whole_retro_prepan_gad_scatter %>%
filter(gad.pandemic_felt_feelings == "Much worse" |
gad.pandemic_felt_feelings == "A little worse" |
gad.pandemic_felt_feelings == "A little better" |
gad.pandemic_felt_feelings == "Much better")
#Create a data set with only the GLAD and EDGI participants
whole_retro_prepan_scatter <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Check that RAMP and NBR has been removed
whole_retro_prepan_scatter %>%
freq(Sample)
#Remove those saying "no different" since pandemic
whole_retro_prepan_gad_scatter <- whole_retro_prepan_scatter %>%
filter(gad.pandemic_felt_feelings == "Much worse" |
gad.pandemic_felt_feelings == "A little worse" |
gad.pandemic_felt_feelings == "A little better" |
gad.pandemic_felt_feelings == "Much better")
whole_retro_prepan_phq_scatter <- whole_retro_prepan_scatter %>%
filter(gad.pandemic_felt_feelings == "Much worse" |
gad.pandemic_felt_feelings == "A little worse" |
gad.pandemic_felt_feelings == "A little better" |
gad.pandemic_felt_feelings == "Much better")
#Visualise as scatterplots
whole_retro_prepan_gad_scatter %>% ggplot(aes(x = gad.sum_score_retro, y = gad.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective GAD scores\nfor whole sample",
sep=" "),
subtitle = paste("n", dim(whole_retro_prepan_gad_scatter)[1]))
whole_retro_prepan_gad_scatter %>% ggplot(aes(x = phq.sum_score_retro, y = phq.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective PHQ scores\nfor whole sample",
sep=" "),
subtitle = paste("n", dim(whole_retro_prepan_gad_scatter)[1]))
# Check the items are the same from the whole chunk
prepan_retro_items
#Create a data set with only the GLAD and EDGI
prepan_retro_dat_worse <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Filter the data to only include those with self-reported little/much worse gad since pandemic
prepan_retro_dat_worse <- prepan_retro_dat_worse %>%
filter(gad.pandemic_felt_feelings == "A little worse" |
gad.pandemic_felt_feelings == "Much worse")
#Check that RAMP and NBR has been removed
prepan_retro_dat_worse %>%
freq(Sample)
# Calculate correlation matrix on specific columns (variables) from your data frame
prepan_retro.corr.mat_worse <- hetcor(
as.data.frame(prepan_retro_dat_worse[,prepan_retro_items]), # Specify the data
use = "pairwise.complete.obs" # Use all pairwise observations
)
# Print the correlation matrix
print(prepan_retro.corr.mat_worse, digits = max(3, getOption("digits") - 3))
# Save the correlations from the correlation matrix in an object
prepan_retro.corr.matrix_worse <- as.matrix(prepan_retro.corr.mat_worse)
# Save the p values from the correlation matrix in an object
prepan_retro.p.matrix_worse <- as.matrix(prepan_retro.corr.mat_worse$tests)
res1 <- cor.ci(prepan_retro.corr.matrix_worse)
lowci <- cor.plot.upperLowerCi(res1)
lowci[upper.tri(lowci)] = t(lowci)[upper.tri(lowci)]
upci <- cor.plot.upperLowerCi(res1)
upci[lower.tri(upci)] = t(upci)[lower.tri(lowci)]
conf <- paste0("[", format(lowci, digits=2), " - ", format(upci, digits=2), "]")
xs <- row(lowci)
ys <- (ncol(lowci)+1) - col(lowci)
xs[lower.tri(xs,diag=TRUE)] <- 0
ys[lower.tri(ys,diag=TRUE)] <- 0
# Check the items are the same from the whole chunk
prepan_retro_items
#Create a data set with only the GLAD and EDGI
prepan_retro_dat_worse <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Filter the data to only include those with self-reported little/much worse gad since pandemic
prepan_retro_dat_worse <- prepan_retro_dat_worse %>%
filter(gad.pandemic_felt_feelings == "A little worse" |
gad.pandemic_felt_feelings == "Much worse")
#Check that RAMP and NBR has been removed
prepan_retro_dat_worse %>%
freq(Sample)
# Calculate correlation matrix on specific columns (variables) from your data frame
prepan_retro.corr.mat_worse <- hetcor(
as.data.frame(prepan_retro_dat_worse[,prepan_retro_items]), # Specify the data
use = "pairwise.complete.obs" # Use all pairwise observations
)
# Print the correlation matrix
print(prepan_retro.corr.mat_worse, digits = max(3, getOption("digits") - 3))
# Save the correlations from the correlation matrix in an object
prepan_retro.corr.matrix_worse <- as.matrix(prepan_retro.corr.mat_worse)
# Save the p values from the correlation matrix in an object
prepan_retro.p.matrix_worse <- as.matrix(prepan_retro.corr.mat_worse$tests)
res1 <- cor.ci(prepan_retro.corr.matrix_worse)
lowci <- cor.plot.upperLowerCi(res1)
lowci[upper.tri(lowci)] = t(lowci)[upper.tri(lowci)]
upci <- cor.plot.upperLowerCi(res1)
upci[lower.tri(upci)] = t(upci)[lower.tri(lowci)]
conf <- paste0("[", format(lowci, digits=2), " - ", format(upci, digits=2), "]")
xs <- row(lowci)
ys <- (ncol(lowci)+1) - col(lowci)
xs[lower.tri(xs,diag=TRUE)] <- 0
ys[lower.tri(ys,diag=TRUE)] <- 0
corrplot(prepan_retro.corr.matrix_worse,
method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4","white","firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = prepan_retro.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank" # Nonsignificant correlations have no colour
)
text(xs, ys, conf, pos=1, cex=0.8)
head(dat$phq.pandemic_felt_feelings)
# Check the items are the same from the whole chunk
prepan_retro_items
#Create a data set with only the GLAD and EDGI
prepan_retro_dat_worse <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Filter the data to only include those with self-reported little/much worse gad since pandemic
prepan_retro_dat_worse <- prepan_retro_dat_worse %>%
filter(gad.pandemic_felt_feelings == "A little worse" |
gad.pandemic_felt_feelings == "Much worse")
#Check that RAMP and NBR has been removed
prepan_retro_dat_worse %>%
freq(Sample)
# Calculate correlation matrix on specific columns (variables) from your data frame
prepan_retro.corr.mat_worse <- hetcor(
as.data.frame(prepan_retro_dat_worse[,prepan_retro_items]), # Specify the data
use = "pairwise.complete.obs" # Use all pairwise observations
)
# Print the correlation matrix
print(prepan_retro.corr.mat_worse, digits = max(3, getOption("digits") - 3))
# Save the correlations from the correlation matrix in an object
prepan_retro.corr.matrix_worse <- as.matrix(prepan_retro.corr.mat_worse)
# Save the p values from the correlation matrix in an object
prepan_retro.p.matrix_worse <- as.matrix(prepan_retro.corr.mat_worse$tests)
res1 <- cor.ci(prepan_retro.corr.matrix_worse)
lowci <- cor.plot.upperLowerCi(res1)
lowci[upper.tri(lowci)] = t(lowci)[upper.tri(lowci)]
upci <- cor.plot.upperLowerCi(res1)
upci[lower.tri(upci)] = t(upci)[lower.tri(lowci)]
conf <- paste0("[", format(lowci, digits=2), " - ", format(upci, digits=2), "]")
xs <- row(lowci)
ys <- (ncol(lowci)+1) - col(lowci)
xs[lower.tri(xs,diag=TRUE)] <- 0
ys[lower.tri(ys,diag=TRUE)] <- 0
corrplot(prepan_retro.corr.matrix_worse,
method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4","white","firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = prepan_retro.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank" # Nonsignificant correlations have no colour
)
text(xs, ys, conf, pos=1, cex=0.8)
#Create a data set with only the GLAD and EDGI participants
little_much_worse_retro_prepan <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Check that RAMP and NBR has been removed
little_much_worse_retro_prepan %>%
freq(Sample)
#Filter by little/much worse self-reported change since pandemic started in gad and phq
much_worse_gad_scatter <- little_much_worse_retro_prepan %>%
filter(gad.pandemic_felt_feelings == "Much worse")
little_worse_gad_scatter <- little_much_worse_retro_prepan %>%
filter(gad.pandemic_felt_feelings == "A little worse")
much_little_worse_gad_scatter <- little_much_worse_retro_prepan %>%
filter(gad.pandemic_felt_feelings == "Much worse" |
gad.pandemic_felt_feelings == "A little worse")
much_worse_phq_scatter <- little_much_worse_retro_prepan %>%
filter(phq.pandemic_felt_feelings == "Much worse")
little_worse_phq_scatter <- little_much_worse_retro_prepan %>%
filter(phq.pandemic_felt_feelings == "A little worse")
much_little_worse_phq_scatter <- little_much_worse_retro_prepan %>%
filter(phq.pandemic_felt_feelings == "Much worse" |
phq.pandemic_felt_feelings == "A little worse")
#Visualise each as a scatterplot
much_worse_gad_scatter %>% ggplot(aes(x = gad.sum_score_prepan, y = gad.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective GAD scores\nfor participants reporting much worse",
sep=" "),
subtitle = paste("n", dim(much_worse_gad_scatter)[1]))
little_worse_gad_scatter %>% ggplot(aes(x = gad.sum_score_prepan, y = gad.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective GAD scores\nfor participants reporting a little worse",
sep=" "),
subtitle = paste("n", dim(little_worse_gad_scatter)[1]))
much_little_worse_gad_scatter %>% ggplot(aes(x = gad.sum_score_prepan, y = gad.sum_score_retro)) +  geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective GAD scores\nfor participants reporting much worse and a little worse",
sep=" "),
subtitle = paste("n", dim(much_little_worse_gad_scatter)[1]))
much_worse_phq_scatter %>% ggplot(aes(x = phq.sum_score_prepan, y = phq.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective PHQ scores\nfor participants reporting much worse",
sep=" "),
subtitle = paste("n", dim(much_worse_phq_scatter)[1]))
little_worse_phq_scatter %>% ggplot(aes(x = phq.sum_score_prepan, y = phq.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective PHQ scores\nfor participants reporting a little worse",
sep=" "),
subtitle = paste("n", dim(little_worse_phq_scatter)[1]))
much_little_worse_phq_scatter %>% ggplot(aes(x = phq.sum_score_prepan, y = phq.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective PHQ scores\nfor participants reporting much worse and a little worse",
sep=" "),
subtitle = paste("n", dim(much_little_worse_phq_scatter)[1]))
# Check the items are the same from the whole chunk
prepan_retro_items
#Create a data set with only the GLAD and EDGI
prepan_retro_dat_better <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Filter the data to only include those with self-reported little/much worse gad since pandemic
prepan_retro_dat_better <- prepan_retro_dat_better %>%
filter(gad.pandemic_felt_feelings == "A little better" |
gad.pandemic_felt_feelings == "Much better")
#Check that RAMP and NBR has been removed
prepan_retro_dat_better %>%
freq(Sample)
# Calculate correlation matrix on specific columns (variables) from your data frame
prepan_retro.corr.mat_better <- hetcor(
as.data.frame(prepan_retro_dat_better[,prepan_retro_items]), # Specify the data
use = "pairwise.complete.obs" # Use all pairwise observations
)
# Print the correlation matrix
print(prepan_retro.corr.mat_better, digits = max(3, getOption("digits") - 3))
# Save the correlations from the correlation matrix in an object
prepan_retro.corr.matrix_better <- as.matrix(prepan_retro.corr.mat_better)
# Save the p values from the correlation matrix in an object
prepan_retro.p.matrix_better <- as.matrix(prepan_retro.corr.mat_better$tests)
res1 <- cor.ci(prepan_retro.corr.matrix_better)
lowci <- cor.plot.upperLowerCi(res1)
lowci[upper.tri(lowci)] = t(lowci)[upper.tri(lowci)]
upci <- cor.plot.upperLowerCi(res1)
upci[lower.tri(upci)] = t(upci)[lower.tri(lowci)]
conf <- paste0("[", format(lowci, digits=2), " - ", format(upci, digits=2), "]")
xs <- row(lowci)
ys <- (ncol(lowci)+1) - col(lowci)
xs[lower.tri(xs,diag=TRUE)] <- 0
ys[lower.tri(ys,diag=TRUE)] <- 0
corrplot(prepan_retro.corr.matrix_better,
method = "color", # objects to represent the correlations on plot
type = "lower", # only use the lower triangle of the matrix
diag = FALSE, # do not show the correlations on the diagonal
addgrid.col = NA,
addCoef.col = "black", # colour for the correlation coefficients in the plot
tl.cex = 0.8,
tl.col = "black",
col=colorRampPalette(c("dodgerblue4","white","firebrick4"))(200), # colours for correlations
# Combine with significance
p.mat = prepan_retro.p.matrix, # Matrix with p values
sig.level = 0.01, # Choose significant level
insig = "blank" # Nonsignificant correlations have no colour
)
text(xs, ys, conf, pos=1, cex=0.8)
#Create a data set with only the GLAD and EDGI participants
little_much_better_retro_prepan <- dat[str_detect(dat$Sample, "GLAD|EDGI"), ]
#Check that RAMP and NBR has been removed
little_much_better_retro_prepan %>%
freq(Sample)
#Filter by participants reporting little/much better in gad and phq since pandemic started (separetely and grouped)
little_better_gad_scatter <- little_much_better_retro_prepan %>%
filter(gad.pandemic_felt_feelings == "A little better")
much_better_gad_scatter <- little_much_better_retro_prepan %>%
filter(gad.pandemic_felt_feelings == "Much better")
much_little_better_gad_scatter <- little_much_better_retro_prepan %>%
filter(gad.pandemic_felt_feelings == "Much better" |
gad.pandemic_felt_feelings == "A little better")
little_better_phq_scatter <- little_much_better_retro_prepan %>%
filter(phq.pandemic_felt_feelings == "A little better")
much_better_phq_scatter <- little_much_better_retro_prepan %>%
filter(phq.pandemic_felt_feelings == "Much better")
much_little_better_phq_scatter <- little_much_better_retro_prepan %>%
filter(phq.pandemic_felt_feelings == "Much better" |
phq.pandemic_felt_feelings == "A little better")
#Visualise them as scatterplots
little_better_gad_scatter %>% ggplot(aes(x = gad.sum_score_prepan, y = gad.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective GAD scores\nfor participants reporting a little better",
sep=" "),
subtitle = paste("n", dim(little_better_gad_scatter)[1]))
much_better_gad_scatter %>% ggplot(aes(x = gad.sum_score_prepan, y = gad.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective GAD scores\nfor participants reporting much better",
sep=" "),
subtitle = paste("n", dim(much_better_gad_scatter)[1]))
much_little_better_gad_scatter %>% ggplot(aes(x = gad.sum_score_prepan, y = gad.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective GAD scores\nfor participants reporting much better and a little better",
sep=" "),
subtitle = paste("n", dim(much_little_better_gad_scatter)[1]))
little_better_phq_scatter %>% ggplot(aes(x = phq.sum_score_prepan, y = phq.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective PHQ scores\nfor participants reporting a little better",
sep=" "),
subtitle = paste("n", dim(little_better_phq_scatter)[1]))
much_better_phq_scatter %>% ggplot(aes(x = phq.sum_score_prepan, y = phq.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective PHQ scores\nfor participants reporting much better",
sep=" "),
subtitle = paste("n", dim(much_better_phq_scatter)[1]))
much_little_better_phq_scatter %>% ggplot(aes(x = phq.sum_score_prepan, y = phq.sum_score_retro)) +
geom_point(colour = "blue") +
stat_smooth(method = "lm") +
geom_jitter(w = 0.4, h = 0.4) +
labs(title = paste("Relationship between prepandemic and retrospective PHQ scores\nfor participants reporting much better and a little better",
sep=" "),
subtitle = paste("n", dim(much_little_better_phq_scatter)[1]))
