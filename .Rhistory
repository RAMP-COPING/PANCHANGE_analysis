group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group)
# create data frame
df <- as.data.frame(coef(summary(lmobject)),row.names=F)
# add row labels
df$RowLabels <- independent.variables
# Add category labels
df$Categories <- categories
# Add group labels
df$Group <- groups
# calculate upper and lower confidence intervals
df <- df %>%
mutate(LowerBound = Estimate - (1.96*`Std. Error`),
UpperBound = Estimate + (1.96*`Std. Error`))
# drop intercept row
df <- df[(df$RowLabels != 'intercept'),]
# order factors
# assign dataframe to global environment
assign(dfname, df, envir = knitr::knit_global())
}
lm.forest <- function(data,title){
p = ggplot(data=data,
aes(x =RowLabels,y = Estimate,
colour = Group)) +
geom_point(size = 2,
position = position_dodge(0.9)) +
geom_hline(aes(fill=Group),
yintercept =0,
linetype=2)  +
xlab('Group') +
ylab("Estimate (95% Confidence Interval)")  +
ggtitle(title) +
geom_errorbar(aes(ymin = LowerBound,
ymax = UpperBound),
width = .5,
position = position_dodge(0.9))  +
facet_wrap(. ~ Categories,
strip.position="left",nrow=5,scales = "free_y") +
scale_colour_manual(values=COPINGpalette5) +
theme(plot.title=element_text(size=20,face="bold"),
axis.text.y=element_text(face="bold"),
axis.text.x=element_text(face="bold"),
axis.title.x=element_text(size=14,face="bold"),
axis.title.y=element_blank(),
strip.text.y = element_text(angle=180,face="bold"),
panel.background = element_blank(),
strip.background = element_rect(fill = "light grey"),
panel.border = element_rect(colour = "grey",fill = NA)) +
coord_flip()
return(p)
}
# prepandemic and retrospective, grouped by disorder measure
lmoutput_format(gad.prepan.lm,"gad.sum_score_prepan","GAD-7", "gad.prepan.lm.for.plot")
lmoutput_format(gad.retro.lm,"gad.sum_score_retro","GAD-7", "gad.retro.lm.for.plot")
lmoutput_format(phq.prepan.lm,"phq.sum_score_prepan","PHQ-9", "phq.prepan.lm.for.plot")
lmoutput_format(phq.retro.lm,"phq.sum_score_retro","PHQ-9", "phq.retro.lm.for.plot")
lmoutput_format(pcl.prepan.lm,"pcl.sum_score_prepan","PCL", "pcl.prepan.lm.for.plot")
lmoutput_format(pcl.retro.lm,"pcl.sum_score_retro","PCL", "pcl.retro.lm.for.plot")
# Retrospective, grouped by sample
lmoutput_format(gad.retro.lm.glad,"gad.sum_score_retro","GLAD and EDGI", "gad.retro.lm.for.plot.GLAD")
lmoutput_format(gad.retro.lm.nbr,"gad.sum_score_retro","NBR", "gad.retro.lm.for.plot.NBR")
lmoutput_format(gad.retro.lm.ramp,"gad.sum_score_retro","RAMP", "gad.retro.lm.for.plot.RAMP")
gad.retro.lm.nbr
lmoutput_format(gad.retro.lm.nbr,"gad.sum_score_retro","NBR", "gad.retro.lm.for.plot.NBR")
summary(coef(gad.retro.lm.nbr))
coef(gad.retro.lm.nbr)
coef(summary(gad.retro.lm.nbr))
lmoutput_format(gad.retro.lm.glad,"gad.sum_score_retro","GLAD and EDGI", "gad.retro.lm.for.plot.GLAD")
lmoutput_format(gad.retro.lm.nbr,"gad.sum_score_retro","NBR", "gad.retro.lm.for.plot.NBR")
df <- as.data.frame(coef(summary(gad.retro.lm.nbr)),row.names=F)
df2 <- as.data.frame(coef(summary(gad.retro.lm.glad)),row.names=F)
View(df2)
View(df)
df <- as.data.frame(coef(summary(gad.retro.lm.nbr)))
df2 <- as.data.frame(coef(summary(gad.retro.lm.glad)))
table(dat.retro.nbr$Ethnicity)
lmoutput_format(phq.retro.lm.nbr,"phq.sum_score_retro","NBR", "phq.retro.lm.for.plot.NBR")
table(dat.retro.nbr$Ethnicity_collapsed)
head(dat.retro.nbr$Ethnicity_collapsed)
head(dat.retro.nbr$Ethnicity_collapsed)
dat.retro.nbr$Ethnicity_collapsed
dat.retro.nbr$Ethnicity_collapsed[801] <- "Other"  #this person was an NA
gad.retro.lm.glad <- lm(formula = gad.sum_score_base.gad.sum_score_retro.glmformula,
dat.retro.glad)
gad.retro.lm.nbr <- lm(formula = gad.sum_score_base.gad.sum_score_retro.glmformula,
dat.retro.nbr)
gad.retro.lm.ramp <- lm(formula = gad.sum_score_base.gad.sum_score_retro.glmformula,
dat.retro.ramp)
phq.retro.lm.glad <- lm(formula = phq.sum_score_base.phq.sum_score_retro.glmformula,
dat.retro.glad)
phq.retro.lm.nbr <- lm(formula = phq.sum_score_base.phq.sum_score_retro.glmformula,
dat.retro.nbr)
phq.retro.lm.ramp <- lm(formula = phq.sum_score_base.phq.sum_score_retro.glmformula,
dat.retro.ramp)
pcl.retro.lm.glad <- lm(formula = pcl.sum_score_base.pcl.sum_score_retro.glmformula,
dat.retro.glad)
pcl.retro.lm.nbr <- lm(formula = pcl.sum_score_base.pcl.sum_score_retro.glmformula,
dat.retro.nbr)
pcl.retro.lm.ramp <- lm(formula = pcl.sum_score_base.pcl.sum_score_retro.glmformula,
dat.retro.ramp)
# function to create dataframe from model output
lmoutput_format <- function(lmobject,explan_var, group, dfname){
## Row labels
independent.variables <- c("intercept",
explan_var,
"comorbid depression and anxiety compared to control",
"depressive disorder compared to control",
"anxiety disorder compared to control",
"eating disorders compared to control",
"obsessive compulsive disorders compared to control",
"comorbid psychotic and bipolar disorder compared to control",
"psychotic disorder compared to control",
"bipolar disorder compared to control",
"mhd.posttraumatic_stress_disorder_ptsd compared to control",
"autism_spectrum_disorder compared to control",
"mhd.attention_deficit_hyperactivity_disorder compared to control",
"mhd.personality_disorder compared to control",
"Female compared to male",
"Non-binary/Self-defined compared to male",
"16-18 compared to 26-35",
"19-25 compared to 26-35",
"36-45 compared to 26-35",
"46-55 compared to 26-35",
"56-65 compared to 26-35",
"66-70 compared to 26-35",
"71-75 compared to 26-35",
"76+ compared to 26-35",
"Mixed or multiple ethnicities compared to White",
"Asian compared to White",
"Black compared to White",
"Other compared to White",
"key_worker compared to non-keyworker",
"time_diff_coping_lockdown_march_23")
## categories to facet on
categories <- c("Intercept",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Pre-existing mental health",
"Gender",
"Gender",
"Age",
"Age",
"Age",
"Age",
"Age",
"Age",
"Age",
"Age",
"Ethnicity",
"Ethnicity",
"Ethnicity",
"Ethnicity",
"Other",
"Other")
## Disorder dimension
groups <- c(group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group,
group)
# create data frame
df <- as.data.frame(coef(summary(lmobject)),row.names=F)
# add row labels
df$RowLabels <- independent.variables
# Add category labels
df$Categories <- categories
# Add group labels
df$Group <- groups
# calculate upper and lower confidence intervals
df <- df %>%
mutate(LowerBound = Estimate - (1.96*`Std. Error`),
UpperBound = Estimate + (1.96*`Std. Error`))
# drop intercept row
df <- df[(df$RowLabels != 'intercept'),]
# order factors
# assign dataframe to global environment
assign(dfname, df, envir = knitr::knit_global())
}
lm.forest <- function(data,title){
p = ggplot(data=data,
aes(x =RowLabels,y = Estimate,
colour = Group)) +
geom_point(size = 2,
position = position_dodge(0.9)) +
geom_hline(aes(fill=Group),
yintercept =0,
linetype=2)  +
xlab('Group') +
ylab("Estimate (95% Confidence Interval)")  +
ggtitle(title) +
geom_errorbar(aes(ymin = LowerBound,
ymax = UpperBound),
width = .5,
position = position_dodge(0.9))  +
facet_wrap(. ~ Categories,
strip.position="left",nrow=5,scales = "free_y") +
scale_colour_manual(values=COPINGpalette5) +
theme(plot.title=element_text(size=20,face="bold"),
axis.text.y=element_text(face="bold"),
axis.text.x=element_text(face="bold"),
axis.title.x=element_text(size=14,face="bold"),
axis.title.y=element_blank(),
strip.text.y = element_text(angle=180,face="bold"),
panel.background = element_blank(),
strip.background = element_rect(fill = "light grey"),
panel.border = element_rect(colour = "grey",fill = NA)) +
coord_flip()
return(p)
}
# prepandemic and retrospective, grouped by disorder measure
lmoutput_format(gad.prepan.lm,"gad.sum_score_prepan","GAD-7", "gad.prepan.lm.for.plot")
lmoutput_format(gad.retro.lm,"gad.sum_score_retro","GAD-7", "gad.retro.lm.for.plot")
lmoutput_format(phq.prepan.lm,"phq.sum_score_prepan","PHQ-9", "phq.prepan.lm.for.plot")
lmoutput_format(phq.retro.lm,"phq.sum_score_retro","PHQ-9", "phq.retro.lm.for.plot")
lmoutput_format(pcl.prepan.lm,"pcl.sum_score_prepan","PCL", "pcl.prepan.lm.for.plot")
lmoutput_format(pcl.retro.lm,"pcl.sum_score_retro","PCL", "pcl.retro.lm.for.plot")
# Retrospective, grouped by sample
lmoutput_format(gad.retro.lm.glad,"gad.sum_score_retro","GLAD and EDGI", "gad.retro.lm.for.plot.GLAD")
lmoutput_format(gad.retro.lm.nbr,"gad.sum_score_retro","NBR", "gad.retro.lm.for.plot.NBR")
lmoutput_format(gad.retro.lm.ramp,"gad.sum_score_retro","RAMP", "gad.retro.lm.for.plot.RAMP")
lmoutput_format(phq.retro.lm.glad,"phq.sum_score_retro","GLAD and EDGI", "phq.retro.lm.for.plot.GLAD")
lmoutput_format(phq.retro.lm.nbr,"phq.sum_score_retro","NBR", "phq.retro.lm.for.plot.NBR")
lmoutput_format(phq.retro.lm.ramp,"phq.sum_score_retro","RAMP", "phq.retro.lm.for.plot.RAMP")
lmoutput_format(pcl.retro.lm.glad,"pcl.sum_score_retro","GLAD and EDGI", "pcl.retro.lm.for.plot.GLAD")
lmoutput_format(pcl.retro.lm.nbr,"pcl.sum_score_retro","NBR", "pcl.retro.lm.for.plot.NBR")
dat.retro.nbr$Ethnicity_collapsed
dat.retro.nbr$Ethnicity_collapsed[998] <- "Other"  #this person was an NA
lmoutput_format(pcl.retro.lm.nbr,"pcl.sum_score_retro","NBR", "pcl.retro.lm.for.plot.NBR")
pcl.retro.lm.nbr <- lm(formula = pcl.sum_score_base.pcl.sum_score_retro.glmformula,
dat.retro.nbr)
coef(summary(pcl.retro.lm.nbr))
lmoutput_format(pcl.retro.lm.nbr,"pcl.sum_score_retro","NBR", "pcl.retro.lm.for.plot.NBR")
lmoutput_format(pcl.retro.lm.ramp,"pcl.sum_score_retro","RAMP", "pcl.retro.lm.for.plot.RAMP")
# Disorder groups
plot.dat.disorder.prepan <- rbind(gad.prepan.lm.for.plot,
phq.prepan.lm.for.plot,
pcl.prepan.lm.for.plot)
plot.dat.disorder.retro <- rbind(gad.retro.lm.for.plot,
phq.retro.lm.for.plot,
pcl.retro.lm.for.plot)
# time of rating groups
plot.dat.time.gad <- rbind(gad.prepan.lm.for.plot.timegroup,
gad.retro.lm.for.plot.timegroup)
# prepandemic and retrospective, grouped by disorder measure
lmoutput_format(gad.prepan.lm,"gad.sum_score_prepan","GAD-7", "gad.prepan.lm.for.plot")
lmoutput_format(gad.retro.lm,"gad.sum_score_retro","GAD-7", "gad.retro.lm.for.plot")
lmoutput_format(phq.prepan.lm,"phq.sum_score_prepan","PHQ-9", "phq.prepan.lm.for.plot")
lmoutput_format(phq.retro.lm,"phq.sum_score_retro","PHQ-9", "phq.retro.lm.for.plot")
lmoutput_format(pcl.prepan.lm,"pcl.sum_score_prepan","PCL", "pcl.prepan.lm.for.plot")
lmoutput_format(pcl.retro.lm,"pcl.sum_score_retro","PCL", "pcl.retro.lm.for.plot")
# prepandemic and retrospective, grouped by time point
lmoutput_format(gad.prepan.lm,"gad.sum_score_prepan","Prepandemic", "gad.prepan.lm.for.plot.timegroup")
lmoutput_format(gad.retro.lm,"gad.sum_score_retro","Retrospective", "gad.retro.lm.for.plot.timegroup")
lmoutput_format(phq.prepan.lm,"phq.sum_score_prepan","Prepandemic", "phq.prepan.lm.for.plot.timegroup")
lmoutput_format(phq.retro.lm,"phq.sum_score_retro","Retrospective", "phq.retro.lm.for.plot.timegroup")
lmoutput_format(pcl.prepan.lm,"pcl.sum_score_prepan","Prepandemic", "pcl.prepan.lm.for.plot.timegroup")
lmoutput_format(pcl.retro.lm,"pcl.sum_score_retro","Retrospective", "pcl.retro.lm.for.plot.timegroup")
# Retrospective, grouped by sample
lmoutput_format(gad.retro.lm.glad,"gad.sum_score_retro","GLAD and EDGI", "gad.retro.lm.for.plot.GLAD")
lmoutput_format(gad.retro.lm.nbr,"gad.sum_score_retro","NBR", "gad.retro.lm.for.plot.NBR")
lmoutput_format(gad.retro.lm.ramp,"gad.sum_score_retro","RAMP", "gad.retro.lm.for.plot.RAMP")
lmoutput_format(phq.retro.lm.glad,"phq.sum_score_retro","GLAD and EDGI", "phq.retro.lm.for.plot.GLAD")
lmoutput_format(phq.retro.lm.nbr,"phq.sum_score_retro","NBR", "phq.retro.lm.for.plot.NBR")
lmoutput_format(phq.retro.lm.ramp,"phq.sum_score_retro","RAMP", "phq.retro.lm.for.plot.RAMP")
lmoutput_format(pcl.retro.lm.glad,"pcl.sum_score_retro","GLAD and EDGI", "pcl.retro.lm.for.plot.GLAD")
lmoutput_format(pcl.retro.lm.nbr,"pcl.sum_score_retro","NBR", "pcl.retro.lm.for.plot.NBR")
lmoutput_format(pcl.retro.lm.ramp,"pcl.sum_score_retro","RAMP", "pcl.retro.lm.for.plot.RAMP")
# Disorder groups
plot.dat.disorder.prepan <- rbind(gad.prepan.lm.for.plot,
phq.prepan.lm.for.plot,
pcl.prepan.lm.for.plot)
plot.dat.disorder.retro <- rbind(gad.retro.lm.for.plot,
phq.retro.lm.for.plot,
pcl.retro.lm.for.plot)
# time of rating groups
plot.dat.time.gad <- rbind(gad.prepan.lm.for.plot.timegroup,
gad.retro.lm.for.plot.timegroup)
plot.dat.time.phq <- rbind(phq.prepan.lm.for.plot.timegroup,
phq.retro.lm.for.plot.timegroup)
plot.dat.time.pcl <- rbind(pcl.prepan.lm.for.plot.timegroup,
pcl.retro.lm.for.plot.timegroup)
# by sample (for retrospective)
plot.dat.sample.gad <- rbind(gad.retro.lm.for.plot.GLAD,
gad.retro.lm.for.plot.NBR,
gad.retro.lm.for.plot.RAMP)
plot.dat.sample.phq <- rbind(phq.retro.lm.for.plot.GLAD,
phq.retro.lm.for.plot.NBR,
phq.retro.lm.for.plot.RAMP)
plot.dat.sample.pcl <- rbind(pcl.retro.lm.for.plot.GLAD,
pcl.retro.lm.for.plot.NBR,
pcl.retro.lm.for.plot.RAMP)
lm.forest(plot.dat.disorder.prepan,"Predictors of pandemic symptoms controlling for prepandemic symptoms")
p
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
knitr::opts_chunk$set(fig.path="figures/")
options(bitmapType = 'quartz') # to render fonts better
lm.forest(plot.dat.disorder.prepan,"Predictors of pandemic symptoms controlling for prepandemic symptoms")
files.sources = list.files()
files.sources
files.sources = list.files("FunctionLib/")
files.sources
# source all functions in the function library folder
files.sources = list.files("FunctionLib/")
sapply(files.sources, source)
files.sources
files.sources = paste0("FunctionLib/",list.files("FunctionLib/"))
files.sources
# source all functions in the function library folder
files.sources = paste0("FunctionLib/",list.files("FunctionLib/"))
sapply(files.sources, source)
lm.forest(plot.dat.disorder.prepan,"Predictors of pandemic symptoms controlling for prepandemic symptoms")
lm.forest(plot.dat.disorder.prepan,"Predictors of pandemic symptoms controlling for prepandemic symptoms")
library(knitr)
library(summarytools)
library(psych)
library(polycor)
library(corrplot)
library(patchwork)
library(broom)
library(tidyverse)
library(ggpubr)
if(!require(sjPlot)){
install.packages("sjPlot")
library(sjPlot)
}
# source all functions in the function library folder
files.sources = paste0("FunctionLib/",list.files("FunctionLib/"))
sapply(files.sources, source)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
theme_personal <-  theme(
text = element_text(color = "black"),
axis.title = element_text(color = "black"),
axis.text = element_text(color = "black"),
axis.title.y = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank(),
panel.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(
colour = "gray",
linetype = "dashed",
size = 0.2
),
axis.ticks = element_blank()
)
source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts_variables_exclusion.rds"))
dim(dat)
dat.retro <- dat %>%
filter(
((data_group_gad == "Baseline and retrospective data" |
data_group_gad == "All prepandemic, baseline and retrospective data") |
(data_group_phq == "Baseline and retrospective data" |
data_group_phq == "All prepandemic, baseline and retrospective data") |
(data_group_pcl == "Baseline and retrospective data" |
data_group_pcl == "All prepandemic, baseline and retrospective data") |
(data_group_ocir == "Baseline and retrospective data" |
data_group_ocir == "All prepandemic, baseline and retrospective data"))
)
dim(dat.retro)
dat.prepan <- dat %>%
filter(
((data_group_gad == "Baseline and retrospective data" |
data_group_gad == "Prepandemic and baseline data" |
data_group_gad == "All prepandemic, baseline and retrospective data") |
(data_group_phq == "Baseline and retrospective data" |
data_group_phq == "Prepandemic and baseline data" |
data_group_phq == "All prepandemic, baseline and retrospective data") |
(data_group_pcl == "Baseline and retrospective data" |
data_group_pcl == "Prepandemic and baseline data" |
data_group_pcl == "All prepandemic, baseline and retrospective data") |
(data_group_ocir == "Baseline and retrospective data" |
data_group_ocir == "Prepandemic and baseline data" |
data_group_ocir == "All prepandemic, baseline and retrospective data")) &
prepandemic_march_1_numeric == 1 # Exclude participants that signed up after the 1. March
)
dim(dat.prepan)
lin_preds <- c("time_diff_coping_lockdown_march_23",
"gad.sum_score_prepan",
"phq.sum_score_prepan",
"pcl.sum_score_prepan",
"gad.sum_score_retro",
"phq.sum_score_retro",
"pcl.sum_score_retro"
)
dat.prepan[(names(dat.prepan) %in% lin_preds)] <- apply(dat.prepan[(names(dat.prepan) %in% lin_preds)],2,scale)
dat.retro[(names(dat.retro) %in% lin_preds)] <- apply(dat.retro[(names(dat.retro) %in% lin_preds)],2,scale)
model1b.lm.form("gad.sum_score_base", "gad.sum_score_prepan")
model1b.lm.form("gad.sum_score_base", "gad.sum_score_retro")
model1b.lm.form("phq.sum_score_base", "phq.sum_score_prepan")
model1b.lm.form("phq.sum_score_base", "phq.sum_score_retro")
model1b.lm.form("pcl.sum_score_base", "pcl.sum_score_prepan")
model1b.lm.form("pcl.sum_score_base", "pcl.sum_score_retro")
gad.prepan.lm <-  lm(formula = gad.sum_score_base.gad.sum_score_prepan.glmformula,
dat.prepan)
gad.retro.lm <- lm(formula = gad.sum_score_base.gad.sum_score_retro.glmformula,
dat.retro)
phq.prepan.lm <-  lm(formula = phq.sum_score_base.phq.sum_score_prepan.glmformula,
dat.prepan)
phq.retro.lm <- lm(formula = phq.sum_score_base.phq.sum_score_retro.glmformula,
dat.retro)
pcl.prepan.lm <-  lm(formula = pcl.sum_score_base.pcl.sum_score_prepan.glmformula,
dat.prepan)
pcl.retro.lm <- lm(formula = pcl.sum_score_base.pcl.sum_score_retro.glmformula,
dat.retro)
dat.retro.glad <- dat.retro %>%
filter(Sample == "GLAD" |
Sample == "EDGI")
dat.retro.nbr <- dat.retro %>%
filter(Sample == "NBR")
dat.retro.ramp <- dat.retro %>%
filter(Sample == "RAMP")
