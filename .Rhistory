source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts_variables_exclusion.rds"))
dim(dat)
colnames(dat)
sum_score_cols <- dat %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
sum_score_cols
phq.sum_score_cols <- dat %>%
select(contains("phq")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
select(-contains("8items")) %>%
colnames()
phq.sum_score_cols
gad.sum_score_cols <- dat %>%
select(contains("gad")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
gad.sum_score_cols
ocir.sum_score_cols <- dat %>%
select(contains("ocir")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
ocir.sum_score_cols
pcl.sum_score_cols <- dat %>%
select(contains("pcl")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
pcl.sum_score_cols
diff_score_cols <- dat %>%
select(contains("diff_score")) %>%
colnames()
diff_score_cols
phq.diff_score_cols <- dat %>%
select(contains("phq")) %>%
select(contains("diff_score")) %>%
colnames()
phq.diff_score_cols
gad.diff_score_cols <- dat %>%
select(contains("gad")) %>%
select(contains("diff_score")) %>%
colnames()
gad.diff_score_cols
ocir.diff_score_cols <- dat %>%
select(contains("ocir")) %>%
select(contains("diff_score")) %>%
colnames()
ocir.diff_score_cols
gad.sum_score_numeric_table <- dat %>%
group_by(gad.change_binary) %>%
summarise_at(
vars(
"Prepan" = gad.sum_score_prepan,
"Base" = gad.sum_score_base,
"Retro" = gad.sum_score_retro
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
gad.sum_score_numeric_table
# reshape the table
gad.sum_score_numeric_summary_table_reshaped <- gad.sum_score_numeric_table %>%
gather(key, value, -gad.change_binary) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
Change = Gad.change_binary,
SD = Sd
)
gad.sum_score_numeric_summary_table_reshaped
kable(gad.sum_score_numeric_summary_table_reshaped)
gad.numeric_table <- dat %>%
group_by(gad.change_binary) %>%
summarise_at(
vars(
"Base - prepan" = gad.diff_score_base_prepan,
"Base - retro" = gad.diff_score_base_retro,
"Prepan - retro" = gad.diff_score_retro_prepan
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
gad.numeric_table
# reshape the table
gad.numeric_summary_table_reshaped <- gad.numeric_table %>%
gather(key, value, -gad.change_binary) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
Change = Gad.change_binary,
SD = Sd
)
gad.numeric_summary_table_reshaped
kable(gad.numeric_summary_table_reshaped)
dat.long.gad.diff <- dat %>%
gather(
key = "Time_point_raw",
value = "gad.diff_score",
all_of(gad.diff_score_cols)) %>%
select(
ID,
Sample,
Gender_collapsed,
Ethnicity_collapsed,
Disorder_hierarchical,
Time_point_raw,
gad.diff_score
) %>%
mutate(Time_point = str_replace(Time_point_raw, "gad.diff_score_", "")) %>%
select(-Time_point_raw)
head(dat.long.gad.diff)
dat.long.gad.sum <- dat %>%
gather(
key = "Time_point_raw",
value = "gad.sum_score",
all_of(gad.sum_score_cols)) %>%
select(
ID,
Sample,
Gender_collapsed,
Ethnicity_collapsed,
Disorder_hierarchical,
Time_point_raw,
gad.sum_score
) %>%
mutate(Time_point = str_replace(Time_point_raw, "gad.sum_score_", "")) %>%
select(-Time_point_raw)
head(dat.long.gad.sum)
dat.long.gad.diff %>%
ggplot(mapping = aes(y = gad.diff_score)) +
geom_bar() +
theme_minimal() +
facet_wrap(facets = vars(Time_point))
dat.long.gad.diff %>%
filter(Time_point != "retro_prepan") %>%
ggplot(mapping = aes(
x = gad.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference GAD7 score",
y = "Percentage of participants",
fill = "Comparison:\nBaseline vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Prepandemic", "Retrospective"))
dat.long.gad.diff %>%
filter(Time_point != "retro_prepan") %>%
ggplot(mapping = aes(
x = gad.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference GAD7 score",
y = "Percentage of participants",
fill = "Comparison:\nBaseline vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Prepandemic", "Retrospective")) +
facet_wrap("Disorder_hierarchical")
dat.long.gad.diff %>%
filter(Time_point == "retro_prepan") %>%
ggplot(mapping = aes(
x = gad.diff_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Difference GAD7 score",
y = "Percentage of participants",
fill = "Comparison:\nRetrospective vs") +
theme_personal +
scale_fill_manual(values = palette, labels = c("Prepandemic"))
dat.long.gad.sum %>%
#  filter(Time_point != "retro_prepan") %>%
ggplot(mapping = aes(
x = gad.sum_score,
y = stat(density*width),
fill = Time_point)) +
geom_histogram(
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "GAD7 scores",
y = "Percentage of participants",
fill = "Time point") +
theme_personal +
scale_fill_manual(
values = COPINGpalette3,
#   labels = c("Baseline", "Prepandemic", "Retrospective")
)
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
#install.packages("summarytools")
#install.packages("tidyverse")
#install.packages("psych")
#install.packages("broom")
#install.packages("skimr")
#install.packages("polycor")
#install.packages("corrplot")
#install.packages("patchwork")
#instlal.packages("ggpubr")
library(knitr)
library(summarytools)
library(psych)
library(polycor)
library(corrplot)
library(patchwork)
library(broom)
library(tidyverse)
library(ggpubr)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
palette = COPINGpalette2
theme_personal <-  theme(
text = element_text(color = "black"),
axis.title = element_text(color = "black"),
axis.text = element_text(color = "black"),
axis.title.y = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank(),
panel.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(
colour = "gray",
linetype = "dashed",
size = 0.2
),
axis.ticks = element_blank()
)
#source data directory: data_path
source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts_variables_exclusion.rds"))
dim(dat)
colnames(dat)
sum_score_cols <- dat %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
sum_score_cols
phq.sum_score_cols <- dat %>%
select(contains("phq")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
select(-contains("8items")) %>%
colnames()
phq.sum_score_cols
gad.sum_score_cols <- dat %>%
select(contains("gad")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
gad.sum_score_cols
ocir.sum_score_cols <- dat %>%
select(contains("ocir")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
ocir.sum_score_cols
pcl.sum_score_cols <- dat %>%
select(contains("pcl")) %>%
select(contains("sum_score")) %>%
select(-ends_with("raw")) %>%
colnames()
pcl.sum_score_cols
diff_score_cols <- dat %>%
select(contains("diff_score")) %>%
colnames()
diff_score_cols
phq.diff_score_cols <- dat %>%
select(contains("phq")) %>%
select(contains("diff_score")) %>%
colnames()
phq.diff_score_cols
gad.diff_score_cols <- dat %>%
select(contains("gad")) %>%
select(contains("diff_score")) %>%
colnames()
gad.diff_score_cols
ocir.diff_score_cols <- dat %>%
select(contains("ocir")) %>%
select(contains("diff_score")) %>%
colnames()
ocir.diff_score_cols
gad.sum_score_numeric_table <- dat %>%
group_by(gad.change_binary) %>%
summarise_at(
vars(
"Prepan" = gad.sum_score_prepan,
"Base" = gad.sum_score_base,
"Retro" = gad.sum_score_retro
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
gad.sum_score_numeric_table
# reshape the table
gad.sum_score_numeric_summary_table_reshaped <- gad.sum_score_numeric_table %>%
gather(key, value, -gad.change_binary) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
Change = Gad.change_binary,
SD = Sd
)
gad.sum_score_numeric_summary_table_reshaped
kable(gad.sum_score_numeric_summary_table_reshaped)
gad.numeric_table <- dat %>%
group_by(gad.change_binary) %>%
summarise_at(
vars(
"Base - prepan" = gad.diff_score_base_prepan,
"Base - retro" = gad.diff_score_base_retro,
"Prepan - retro" = gad.diff_score_retro_prepan
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
gad.numeric_table
# reshape the table
gad.numeric_summary_table_reshaped <- gad.numeric_table %>%
gather(key, value, -gad.change_binary) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
Change = Gad.change_binary,
SD = Sd
)
gad.numeric_summary_table_reshaped
kable(gad.numeric_summary_table_reshaped)
dat.long.gad.diff <- dat %>%
gather(
key = "Time_point_raw",
value = "gad.diff_score",
all_of(gad.diff_score_cols)) %>%
select(
ID,
Sample,
Gender_collapsed,
Ethnicity_collapsed,
Disorder_hierarchical,
Time_point_raw,
gad.diff_score
) %>%
mutate(Time_point = str_replace(Time_point_raw, "gad.diff_score_", "")) %>%
select(-Time_point_raw)
head(dat.long.gad.diff)
