#skipped meals
respiratory.raw.id <- respiratory.raw.id %>%
mutate(
respiratory.skipped_meals_binary =
if_else(
respiratory.skipping_meals_because_you_felt_unwell_numeric >= 2,
1,
0
)
)
freq(respiratory.raw.id$respiratory.anosmia_binary)
freq(respiratory.raw.id$respiratory.pcough_binary)
freq(respiratory.raw.id$respiratory.fatigue_binary)
freq(respiratory.raw.id$respiratory.skipped_meals_binary)
respiratory <- respiratory.raw.id
dat.coping <- left_join(
x = dat,
y = respiratory,
by = c("Sample", "ID")
)
if(GLAD == TRUE | NBR == TRUE | EDGI == TRUE){
dat.coping <- dat.coping %>%
mutate(
Sex_respiratory =
if_else(
Sex == "Male",
true = 1,
false = 0,
missing = NA_real_
)
)
}
if(RAMP == TRUE){
dat.coping <- dat.coping %>%
mutate(
Sex_respiratory =
if_else(
Gender == "Male" &
Transgender_uncleaned == "No",
true = 1,
false = 0,
missing = NA_real_
)
)
}
if(RAMP == TRUE){
dat.coping <- dat.coping %>%
mutate(
Age =
case_when(
age_category_full == "16-18" ~ 17,
age_category_full == "19-25" ~ 22,
age_category_full == "26-35" ~ 30.5,
age_category_full == "36-45" ~ 40.5,
age_category_full == "46-55" ~ 50.5,
age_category_full == "56-65" ~ 60.5,
age_category_full == "66-70" ~ 68,
age_category_full == "71-75" ~ 73,
age_category_full == "76-80" ~ 78,
age_category_full == "81-85" ~ 83,
age_category_full == "86-90" ~ 88,
age_category_full == "91-100" ~ 93,
age_category_full == "100+" ~ 100
)
)
}
dat.coping <- dat.coping %>%
mutate(
covid_symptoms =
if_else(
!is.na(respiratory.anosmia_binary) &
!is.na(respiratory.pcough_binary) &
!is.na(respiratory.fatigue_binary) &
!is.na(respiratory.skipped_meals_binary),
1,
0
)
)
dat.coping %>%
freq(covid_symptoms, cumul = F)
# linear model of covid symptoms
dat.coping <- dat.coping %>%
mutate(
covid_probability =
(-1.32) -
(0.01*Age) +
(0.44*Sex_respiratory) +
(1.75*respiratory.anosmia_binary) +
(0.31*respiratory.pcough_binary) +
(0.49*respiratory.fatigue_binary) +
(0.39*respiratory.skipped_meals_binary)
)
# Calcualte the odds ratios
dat.coping <- dat.coping %>%
mutate(
covid_odds_ratio =
(exp(covid_probability) / (1 + exp(covid_probability)))
)
# generate binary cutt off variable for risk of COVID
dat.coping <- dat.coping %>%
mutate(
covid_odds_ratio_50_numeric =
case_when(
covid_odds_ratio >= 0 & covid_odds_ratio < 0.5 ~ "0", #cut off at 0.5
covid_odds_ratio >= 0.5 & covid_odds_ratio <= 1 ~ "1"
)
)
#create factor with labels
dat.coping <- dat.coping %>%
mutate(
covid_odds_ratio_50 =
recode_factor(
covid_odds_ratio_50_numeric,
"0" = "No COVID",
"1" = "Probable COVID"
)
)
#frequency table for covid variables
covid_variables <- c("covid_odds_ratio",
"covid_probability"
)
descr(x = dat.coping[,covid_variables],
round.digits = 2,
transpose = TRUE)
## looking at cases over 0.5
freq(dat.coping$covid_odds_ratio_50,
cumul = FALSE)
dat.coping <- dat.coping %>%
mutate(
covid_probable_case_incl_screening_numeric =
case_when(
respiratory.breath_diarrhoea_fatigue_fever_numeric == 0 ~ 0,
covid_odds_ratio_50_numeric == 0 ~ 0,
covid_odds_ratio_50_numeric == 1 ~ 1
)
)
#create factor with labels
dat.coping <- dat.coping %>%
mutate(
covid_probable_case_incl_screening =
recode_factor(
covid_probable_case_incl_screening_numeric,
"0" = "No COVID",
"1" = "Probable COVID"
)
)
dat.coping %>%
freq(covid_probable_case_incl_screening,
cumul = FALSE)
summarytools::dfSummary(
dat.coping,
graph.col = F,
valid.col = F,
labels.col = F)
if(GLAD == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/glad.rds"))
}
if(EDGI == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/edgi.rds"))
}
if(NBR == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/nbr.rds"))
}
if(RAMP == TRUE){
saveRDS(object = dat.coping, file = paste0(data_path, "/ramp.rds"))
}
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
library(tidyverse)
library(skimr)
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
glad <- read_rds(path = paste0(data_path, "/glad.rds"))
dim(glad)
edgi <- read_rds(path = paste0(data_path, "/edgi.rds"))
dim(edgi)
nbr <- read_rds(path = paste0(data_path, "/nbr.rds"))
dim(nbr)
ramp <- read_rds(path = paste0(data_path, "/ramp.rds"))
dim(ramp)
dat <- bind_rows(
glad,
edgi,
nbr,
ramp
)
#look at the data
skimr::skim(dat)
saveRDS(object = dat, file = paste0(data_path, "/four_cohorts.rds"))
freq(dat$data_group_gad)
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
#install.packages("summarytools")
#install.packages("tidyverse")
#install.packages("psych")
#install.packages("eeptools")
#install.packages("skimr")
library(knitr)
library(summarytools)
library(psych)
library(eeptools) # Needed to calculate age from birthdate
library(tidyverse)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
palette = COPINGpalette2
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts.rds"))
dim(dat)
colnames(dat)
summarytools::dfSummary(
dat,
graph.col = F,
valid.col = F,
labels.col = F)
dat %>%
freq(
data_group_gad,
cumul = T)
dat %>%
freq(
data_group_phq,
cumul = T)
dat %>%
freq(
data_group_pcl,
cumul = T)
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
#install.packages("summarytools")
#install.packages("tidyverse")
#install.packages("psych")
#install.packages("eeptools")
#install.packages("skimr")
library(knitr)
library(summarytools)
library(psych)
library(eeptools) # Needed to calculate age from birthdate
library(tidyverse)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
palette = COPINGpalette2
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts.rds"))
dim(dat)
colnames(dat)
dat %>%
freq(
data_group_gad,
cumul = T)
dat %>%
freq(
data_group_phq,
cumul = T)
dat %>%
freq(
data_group_pcl,
cumul = T)
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
#install.packages("summarytools")
#install.packages("tidyverse")
#install.packages("psych")
#install.packages("eeptools")
#install.packages("skimr")
library(knitr)
library(summarytools)
library(psych)
library(eeptools) # Needed to calculate age from birthdate
library(tidyverse)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
palette = COPINGpalette2
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts.rds"))
dim(dat)
colnames(dat)
dat %>%
freq(
data_group_gad,
cumul = T)
dat %>%
freq(
data_group_phq,
cumul = T)
dat %>%
freq(
data_group_pcl,
cumul = T)
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
#install.packages("summarytools")
#install.packages("tidyverse")
#install.packages("psych")
#install.packages("eeptools")
#install.packages("skimr")
library(knitr)
library(summarytools)
library(psych)
library(eeptools) # Needed to calculate age from birthdate
library(tidyverse)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
palette = COPINGpalette2
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
dat <- readRDS(file = paste0(data_path, "/four_cohorts.rds"))
dim(dat)
colnames(dat)
dat %>%
freq(
data_group_gad,
cumul = F)
dat %>%
freq(
data_group_phq,
cumul = F)
dat %>%
freq(
data_group_pcl,
cumul = F)
