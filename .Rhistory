# reshape the table
pcl.numeric_summary_table_reshaped <- pcl.numeric_table %>%
gather(key, value) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
pcl.numeric_summary_table_reshaped
kable(pcl.numeric_summary_table_reshaped)
pcl.sum_score_numeric_table <- dat %>%
#    group_by(Sample) %>%
summarise_at(
vars(
"Prepan" = pcl.sum_score_prepan,
"Base" = pcl.sum_score_base
),
.funs =
list(
~mean(., na.rm = T),
~sd(., na.rm = T),
~median(., na.rm = T),
~min(., na.rm = T),
~max(., na.rm = T),
~skew(., na.rm = T),
kurtosis = ~kurtosi(., na.rm = T)
)
)
pcl.numeric_table
# reshape the table
pcl.sum_score_numeric_summary_table_reshaped <- pcl.sum_score_numeric_table %>%
gather(key, value) %>%
separate(key, c("variable", "measure"), sep = "_") %>%
mutate(measure = factor(
x = measure,
levels =  c( # this is the order I want my columns to appear in
"missing",
"min",
"max",
"mean",
"median",
"mode",
"sd",
"skew",
"kurtosis"
))) %>%
spread(measure, value) %>%
# we can apply a function to all variables to edit them so that they are publication ready
rename_all(
.funs = ~str_to_title(.)
) %>%
# or we can individually rename variables
rename(
SD = Sd
)
pcl.sum_score_numeric_summary_table_reshaped
kable(pcl.sum_score_numeric_summary_table_reshaped)
pcl.retro.items <- c(
"pcl.stressful_experience_upset_reminded_retro_numeric",
"pcl.stressful_experience_repeated_images_retro_numeric",
"pcl.stressful_situation_avoiding_activities_retro_numeric",
"pcl.cut_people_feeling_distant_retro_numeric",
"pcl.difficulty_concentrating_retro_numeric",
"pcl.feeling_irritable_or_having_angry_outbursts_retro_numeric"
)
pcl.percentages.summary <- dat %>%
select(
all_of(pcl.retro.items)
) %>%
gather(
key = "PCL Item",
value = "Binary_score",
all_of(pcl.retro.items)
) %>%
mutate(Binary_score = fct_explicit_na(as.factor(Binary_score), na_level = "Missing")) %>%
group_by(`PCL Item`) %>%
count(`PCL Item`, Binary_score) %>%
mutate(prop = round(n/sum(n), 3)*100) %>%
mutate(n_prop = paste0(n," (",prop, "%)"))
pcl.percentages.summary
model0a <- lm(
formula = phq.diff_score_base_prepan ~ Disorder,
data = dat)
summary(model0a)
model0b <- lm(
formula = phq.diff_score_base_prepan ~
anxiety_disorders +
depressive_disorders +
eating_disorders +
obsessive_compulsive_disorders +
psychotic_disorders +
mhd.mania_hypomania_bipolar_or_manicdepression +
mhd.posttraumatic_stress_disorder_ptsd +
mhd.autism_aspergers_or_autistic_spectrum_disorder +
mhd.attention_deficit_hyperactivity_disorder +
mhd.personality_disorder,
data = dat)
summary(model0b)
model0 <- lm(
formula = gad.diff_score_base_prepan ~ Disorder,
data = dat)
summary(model0)
tidy(model0)
model1 <- lm(
formula = phq.diff_score_base_prepan ~ Disorder + Gender + Age + Ethnicity + time_diff_sign_up_coping,
data = dat)
summary(model1)
model1 <- lm(
formula = gad.diff_score_base_prepan ~ Disorder + Gender + Age + Ethnicity + time_diff_sign_up_coping,
data = dat)
summary(model1)
model0a <- lm(
formula = gad.diff_score_base_prepan ~ Disorder,
data = dat.gad)
knitr::opts_chunk$set(echo = FALSE,
comment=NA,
prompt=FALSE,
cache=FALSE)
options(bitmapType = 'quartz') # to render fonts better
remove(list = ls())
date = Sys.Date()
#install.packages("summarytools")
#install.packages("tidyverse")
#install.packages("psych")
#install.packages("broom")
#install.packages("skimr")
library(knitr)
library(summarytools)
library(psych)
library(patchwork)
library(broom)
library(tidyverse)
COPINGpalette2 <- c("#78D9C5",
"#F5BE5E")
COPINGpalette3 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9")
COPINGpalette4 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73")
COPINGpalette5 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98")
COPINGpalette6 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB")
COPINGpalette7 <- c("#78D9C5",
"#F5BE5E",
"#EEB6E9",
"#DBDB73",
"#FFED98",
"#BFD2EB",
"#808080")
COPINGpaletteGRAD <- c("#F5BE5E",
"#FFD284",
"#FFEED1",
"#B5B5B5",
"#DEFFF8",
"#94F6E1",
"#78D9C5")
COPINGNeuCenterpalette <- c("#78D9C5",
"#808080",
"#F5BE5E")
RAMPworseGRADpalette <- c("#78D9C5",
"#FFEED1",
"#F5BE5E",
"#FFB1B5")
GLADpalette = c("#efc00b",
"#b7dee8")
palette = COPINGpalette2
#source raw data directory: data.raw_path
source("../PANCHANGE_raw_path.R")
dat.raw <- readRDS(file = paste0(data_path, "/four_cohorts.rds"))
dim(dat.raw)
colnames(dat.raw)
dat.raw %>%
freq(
data_group_gad,
cumul = F)
dat.raw %>%
freq(
data_group_phq,
cumul = F)
dat.raw %>%
freq(
data_group_pcl,
cumul = F)
dat.raw %>%
freq(
data_group_ocir,
cumul = F)
dat.raw %>%
freq(age_category_full)
dat.raw %>%
freq(Gender)
dat.raw %>%
freq(Gender_numeric)
dat.raw <- dat.raw %>%
mutate(Gender_collapsed_numeric =
case_when(
Gender_numeric == 0 ~ 0,
Gender_numeric == 1 ~ 1,
Gender_numeric == 2 ~ 2,
Gender_numeric == 3 ~ 2
)
)
dat.raw <- dat.raw %>%
mutate(Gender_collapsed =
recode_factor(
Gender_collapsed_numeric,
`0` = "Male",
`1` = "Female",
`2` = "Non-binary/Self-defined"
)
)
dat.raw %>%
freq(Gender_collapsed)
dat.raw %>%
freq(Ethnicity)
dat.raw %>%
freq(Ethnicity_numeric)
dat.raw <- dat.raw %>%
mutate(Ethnicity_collapsed_numeric =
case_when(
Ethnicity_numeric == 1 ~ 0,
Ethnicity_numeric == 2 ~ 1,
Ethnicity_numeric == 3 ~ 2,
Ethnicity_numeric == 4 ~ 3,
Ethnicity_numeric == 5 ~ 3,
Ethnicity_numeric == 6 ~ 4
)
)
dat.raw <- dat.raw %>%
mutate(Ethnicity_collapsed =
recode_factor(
Ethnicity_collapsed_numeric,
`0` = "European",
`1` = "Mixed or multiple ethnic origins",
`2` = "Asian or Asian British",
`3` = "African or African British",
`4` = "Asian or Asian British"
)
)
dat.raw %>%
freq(Ethnicity_collapsed)
dat <- dat.raw %>%
filter(
(data_group_gad == "Baseline and retrospective data" |
data_group_gad == "Prepandemic and baseline data" |
data_group_gad == "All prepandemic, baseline and retrospective data") |
(data_group_phq == "Baseline and retrospective data" |
data_group_phq == "Prepandemic and baseline data" |
data_group_phq == "All prepandemic, baseline and retrospective data") |
(data_group_pcl == "Baseline and retrospective data" |
data_group_pcl == "Prepandemic and baseline data" |
data_group_pcl == "All prepandemic, baseline and retrospective data") |
(data_group_ocir == "Baseline and retrospective data" |
data_group_ocir == "Prepandemic and baseline data" |
data_group_ocir == "All prepandemic, baseline and retrospective data")
)
dim(dat)
dat %>%
freq(disorders_total_count)
dat.gad <- dat.raw %>%
drop_na(
) %>%
filter(
(data_group_gad == "Baseline and retrospective data" |
data_group_gad == "Prepandemic and baseline data" |
data_group_gad == "All prepandemic, baseline and retrospective data")
)
dim(dat.gad)
diff_score_cols <- dat %>%
select(contains("diff_score")) %>%
colnames()
diff_score_cols
phq.diff_score_cols <- dat %>%
select(contains("phq")) %>%
select(contains("diff_score")) %>%
colnames()
phq.diff_score_cols
gad.diff_score_cols <- dat %>%
select(contains("gad")) %>%
select(contains("diff_score")) %>%
colnames()
gad.diff_score_cols
ocir.diff_score_cols <- dat %>%
select(contains("ocir")) %>%
select(contains("diff_score")) %>%
colnames()
ocir.diff_score_cols
theme_personal <-  theme(
text = element_text(color = "black"),
axis.title = element_text(color = "black"),
axis.text = element_text(color = "black"),
axis.title.y = element_blank(),
legend.background = element_blank(),
legend.box.background = element_blank(),
panel.background = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_line(
colour = "gray",
linetype = "dashed",
size = 0.2
),
axis.ticks = element_blank()
)
dat <- dat %>%
mutate(
Disorder_hierarchical_numeric =
case_when(
psychotic_disorders_numeric == 1 ~ 11,
mhd.mania_hypomania_bipolar_or_manicdepression_numeric == 1 ~ 10,
mhd.autism_aspergers_or_autistic_spectrum_disorder_numeric == 1 ~ 9,
mhd.personality_disorder_numeric == 1 ~ 8,
mhd.attention_deficit_hyperactivity_disorder_numeric == 1 ~ 7,
obsessive_compulsive_disorders_numeric == 1 ~ 6,
eating_disorders_numeric == 1 ~ 5,
mhd.posttraumatic_stress_disorder_ptsd_numeric == 1 ~ 4,
(anxiety_disorders_numeric == 1 &
depressive_disorders_numeric == 1) ~ 3,
anxiety_disorders_numeric == 1 ~ 2,
depressive_disorders_numeric == 1 ~ 1,
control_numeric == 1 ~ 0
)
)
dat <- dat %>%
mutate(
Disorder_hierarchical =
recode_factor(
Disorder_hierarchical_numeric,
`0` = "Controls",
`1` = "Depressive disorders",
`2` = "Anxiety disorders",
`3` = "Depressive & anxiety disorders",
`4` = "PTSD",
`5` = "Eating disorders",
`6` = "OCDs",
`7` = "ADHD",
`8` = "Personality disorders",
`9` = "Autism",
`10` = "Bipolar disorders",
`11` = "Psychotic disorders"
)
)
dat %>%
freq(Disorder_hierarchical)
dat %>%
filter(is.na(Disorder_hierarchical)) %>%
freq(Sample)
dat %>%
group_by(Sample) %>%
summarise(Mean = mean(Age),
SD = sd(Age),
Min = min(Age),
Max = max(Age))
disorder_columns <- c(
"depressive_disorders_numeric",
"anxiety_disorders_numeric",
"eating_disorders_numeric",
"obsessive_compulsive_disorders_numeric",
"psychotic_disorders_numeric",
"mhd.mania_hypomania_bipolar_or_manicdepression_numeric",
"mhd.posttraumatic_stress_disorder_ptsd_numeric",
"mhd.autism_aspergers_or_autistic_spectrum_disorder_numeric",
"mhd.attention_deficit_hyperactivity_disorder_numeric",
"mhd.personality_disorder_numeric",
"control_numeric"
)
dat.long.psych <- dat %>%
gather(
key = "Disorder_inc_raw",
value = "Diagnosis",
all_of(disorder_columns)) %>%
select(
ID,
Sample,
Gender,
Ethnicity,
all_of(diff_score_cols),
Disorder_inc_raw,
Diagnosis
) %>%
mutate(Disorder_inc =
recode_factor(
Disorder_inc_raw,
anxiety_disorders_numeric = "Anxiety disorders",
depressive_disorders_numeric = "Depressive disorders",
eating_disorders_numeric = "Eating disorders",
obsessive_compulsive_disorders_numeric = "OCDs",
psychotic_disorders_numeric = "Psychotic disorders",
mhd.mania_hypomania_bipolar_or_manicdepression_numeric = "Bipolar disorders",
mhd.posttraumatic_stress_disorder_ptsd_numeric = "PTSD",
mhd.autism_aspergers_or_autistic_spectrum_disorder_numeric = "Autism",
mhd.attention_deficit_hyperactivity_disorder_numeric = "ADHD",
mhd.personality_disorder_numeric = "Personality disorders",
control_numeric = "Controls"
))
head(dat.long.psych)
Disorder_inc_by_Gender <- dat.long.psych %>%
filter(Diagnosis == 1) %>%
count(Disorder_inc, Gender) %>%
mutate(Prop = round(n/sum(n), 2))
Disorder_inc_by_Gender
Disorder_inc_by_Gender <- dat.long.psych %>%
group_by(Disorder_inc) %>%
filter(Diagnosis == 1) %>%
count(Gender) %>%
mutate(Prop = round(n/sum(n), 2))
Disorder_inc_by_Gender
Disorder_inc_by_Gender %>%
ggplot(mapping = aes(
x = Disorder_inc,
y = n)
) +
geom_bar(
aes(fill = Gender),
#    position = "dodge",
stat="identity",
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Disorders",
y = "Number of participants",
fill = "Gender") +
theme_personal +
scale_fill_manual(
values = COPINGpalette4,
#    labels = c("Prepandemic", "Retrospective")
) +
coord_flip()
Disorder_inc_by_Sample <- dat.long.psych %>%
filter(Diagnosis == 1) %>%
count(Disorder_inc, Sample)
Disorder_inc_by_Sample %>%
ggplot(mapping = aes(
x = Disorder_inc,
y = n)
) +
geom_bar(
aes(fill = Sample),
#    position = "dodge",
stat="identity",
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Disorders",
y = "Number of participants",
fill = "Sample") +
theme_personal +
scale_fill_manual(
values = COPINGpalette4,
#    labels = c("Prepandemic", "Retrospective")
) +
coord_flip()
Disorder_inc_by_Ethnicity <- dat.long.psych %>%
filter(Diagnosis == 1) %>%
count(Disorder_inc, Ethnicity) %>%
mutate(Prop = round(n/sum(n), 2))
Disorder_inc_by_Ethnicity
Disorder_inc_by_Ethnicity %>%
ggplot(mapping = aes(
x = Disorder_inc,
y = n)
) +
geom_bar(
aes(fill = Ethnicity),
#    position = "dodge",
stat="identity",
binwidth = 1,
position = position_dodge2(preserve = "single")
) +
labs(
x = "Disorders",
y = "Number of participants",
fill = "Ethnicity") +
theme_personal +
scale_fill_manual(
values = COPINGpalette6,
#    labels = c("Prepandemic", "Retrospective")
) +
coord_flip()
Ethnicity_by_Sample <- dat %>%
count(Ethnicity, Sample) %>%
mutate(Prop = round(n/sum(n), 2))
Ethnicity_by_Sample
